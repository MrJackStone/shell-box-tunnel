! TUNNEL_V2_FEM


*msg,UI,FILE_name,'CREATING FINITE ELEMENT MODEL...'
TUNNEL # %s %/&
%35C

/prep7

CSYS,0

!!                                                                                                !!
!! 4.1  Tunnel                                                                                    !!
!!                                                                                                !!
! Left wall attributes
CMSEL,S,COMPA_LeftWall
AATT,1,,1,CS_left,SEC_LWALL

! Right wall attributes
CMSEL,S,COMPA_RightWall
AATT,1,,1,CS_right,SEC_RWALL

! Inner walls attributes
*if,GEO_IWALL_type,eq,0,then
  CMSEL,S,COMPA_InnerWalls
  AATT,1,,1,CS_right,SEC_IWALL
*elseif,GEO_IWALL_type,eq,1,then
  wallX=0
  *do,nthWall,1,GEO_TUN_modules-1,1
    wallX=wallX+GEO_TUN_effW

    beamCS=CS_IWALL_beams(nthWall)
    colCS=CS_IWALL_columns(nthWall)

    cmsel,s,COMPA_tBeam
    asel,r,loc,x,wallX
    aatt,MAT_CONC,,TYPE_SHELL181,beamCS,SEC_tBeam

    cmsel,s,COMPA_bBeam
    asel,r,loc,x,wallX
    aatt,MAT_CONC,,TYPE_SHELL181,beamCS,SEC_bBeam

    cmsel,s,COMPA_Columns
    asel,r,loc,x,wallX
    aatt,MAT_CONC,,TYPE_SHELL181,colCS,SEC_Columns
  *enddo
*endif

! Floor slab attributes
CMSEL,S,COMPA_Floor
aatt,MAT_conc,,TYPE_shell181,CS_bot,SEC_FLOOR

! Roof slab attributes
CMSEL,S,COMPA_Roof
aatt,MAT_concTs,,TYPE_shell181,CS_top,SEC_ROOF

! Roof strut attributes
cmsel,s,COMPA_struts
*get,ac,area,,count
*if,ac,gt,0,then
  aatt,MAT_conc,,TYPE_shell181,CS_top,SEC_strut
*endif

*if,GEO_CORB_status,GE,1,THEN
  ! Corbels
  xWall=0
  *do,nthWall,1,GEO_TUN_modules+1,1

    ! Geometric limits
    xLeft=xWall-GEO_corbelXOff_BOT
    xRight=xWall+GEO_corbelXOff_BOT
    ASEL,S,LOC,X,xLeft,xRight
    CM,COMPA_insideDX,AREA

    ! Coordinate system numbers
    nthCS_ROOF_left   = SEC_ROOF_LCORBEL  + nthWall
    nthCS_ROOF_right  = SEC_ROOF_RCORBEL  + nthWall
    nthCS_FLOOR_left  = SEC_FLOOR_LCORBEL + nthWall
    nthCS_FLOOR_right = SEC_FLOOR_RCORBEL + nthWall
    nthCS_WALL_bot    = SEC_WALL_BCORBEL  + nthWall
    nthCS_WALL_top    = SEC_WALL_TCORBEL  + nthWall

    ! Walls
    *if,xWall,EQ,0,THEN
      nthWallCS=CS_left
    *else
      nthWallCS=CS_right
    *endif

    *if,GEO_CORB_status,EQ,1,OR,GEO_CORB_status,EQ,2,THEN
      ! Top slab, left side
      CMSEL,S,COMPA_ROOF_leftCorbel
      CMSEL,R,COMPA_insideDX
      AATT,1,,1,CS_top,nthCS_ROOF_left
      ! Top slab, right side
      CMSEL,S,COMPA_ROOF_rightCorbel
      CMSEL,R,COMPA_insideDX
      AATT,1,,1,CS_top,nthCS_ROOF_right
      ! Top, walls
      CMSEL,S,COMPA_WALL_topCorbel
      CMSEL,R,COMPA_insideDX
      AATT,1,,1,nthWallCS,nthCS_WALL_top
    *endif

    *if,GEO_CORB_status,EQ,1,OR,GEO_CORB_status,EQ,3,THEN
      ! Bottom slab, left side
      CMSEL,S,COMPA_FLOOR_leftCorbel
      CMSEL,R,COMPA_insideDX
      AATT,1,,1,CS_bot,nthCS_FLOOR_left
      ! Bottom slab, right side
      CMSEL,S,COMPA_FLOOR_rightCorbel
      CMSEL,R,COMPA_insideDX
      AATT,1,,1,CS_bot,nthCS_FLOOR_right
      ! Bottom, walls
      CMSEL,S,COMPA_WALL_botCorbel
      CMSEL,R,COMPA_insideDX
      AATT,1,,1,nthWallCS,nthCS_WALL_bot
    *endif

    xWall=xWall+Eff_GalleryWidth
  *enddo
*endif

! Mesh floor & walls
cmsel,s,COMPA_tunnel
cmsel,u,COMPA_roof
aesize,all,FEM_TUN_esize
amesh,all

! Mesh roof
cmsel,s,COMPA_roof
aesize,all,FEM_TUN_esize

*if,GEO_ROOF_type,eq,0,then
  ! Flat slab
  amesh,all

*elseif,GEO_ROOF_type,eq,1,then
  ! With precast girders
  startPoint = 1

  *do,nthGirder,1,GEO_girderCount,1

    cmsel,s,COMPA_RG%nthGirder%
    *get,ac,area,,count
    *if,ac,eq,0,then
      startPoint = 1
      *cycle
    *endif

    *if,startPoint,eq,1,then
      ! First gider: mesh freely
      startPoint = 0
      amesh,all
    *else
      ! Subsequent girders: paste previously copied line mesh
      zEdge = GEO_girderZ(nthGirder-1)
      lsla,s
      lsel,r,loc,z,zEdge
      cm,COMPL_pasteG,line
      cmsel,a,COMPL_copyG
      mshcopy,line,COMPL_copyG,COMPL_pasteG
      amesh,all
    *endif

    ! Girders before last: copy line mesh
    *if,nthGirder,lt,GEO_girderCount,then
      zEdge = GEO_girderZ(nthGirder)
      lsla,s
      lsel,r,loc,z,zEdge
      cm,COMPL_copyG,line
    *endif

  *enddo
*endif

! Mesh struts
cmsel,a,COMPA_struts
*get,ac,area,,count
*if,ac,gt,0,then
  aesize,all,FEM_TUN_esize
  amesh,all
*endif

! Connect parts
fixed  = 0
pinned = 1

roofConnection = fixed
*if,GEO_ROOF_wallConnection,eq,1,then
  roofConnection = pinned
*endif

l2acnt , 'COMPA_floor' , 'COMPL_LWALL_floorInterface' ,  , fixed
l2acnt , 'COMPA_floor' , 'COMPL_RWALL_floorInterface' ,  , fixed
l2acnt , 'COMPA_roof'  , 'COMPL_LWALL_roofInterface'  ,  , roofConnection
l2acnt , 'COMPA_roof'  , 'COMPL_RWALL_roofInterface'  ,  , roofConnection

*if,GEO_IWALL_count,ge,1,then
  l2acnt , 'COMPA_floor' , 'COMPL_IWALL_floorInterface' ,  , fixed
  l2acnt , 'COMPA_roof'  , 'COMPL_IWALL_roofInterface'  ,  , fixed
*endif

*if,GEO_ROOF_gapStatus,eq,1,and,GEO_ROOF_gapStrutCount,gt,0,then
  l2acnt , 'COMPA_struts' , 'COMPL_LWALL_roofInterface' ,  , pinned
  l2acnt , 'COMPA_struts' , 'COMPL_RWALL_roofInterface' ,  , pinned
*endif


!!                                                                                                !!
!! 4.2  Headwall                                                                                  !!
!!                                                                                                !!
*get,parType,PARM,GEO_HDW_status,TYPE
*if,parType,EQ,0,AND,GEO_HDW_status,GT,0,THEN
  CMSEL,S,COMPA_HDW_LeftWall
  cmsel,r,COMPA_HDW_1
  AATT,MAT_CONC,,TYPE_SHELL181,CS_HDW1_leftWall,SEC_HDW_Wall

  CMSEL,S,COMPA_HDW_LeftWall
  cmsel,r,COMPA_HDW_2
  AATT,MAT_CONC,,TYPE_SHELL181,CS_HDW2_leftWall,SEC_HDW_Wall

  CMSEL,S,COMPA_HDW_rightWall
  cmsel,r,COMPA_HDW_1
  AATT,MAT_CONC,,TYPE_SHELL181,CS_HDW1_rightWall,SEC_HDW_Wall

  CMSEL,S,COMPA_HDW_rightWall
  cmsel,r,COMPA_HDW_2
  AATT,MAT_CONC,,TYPE_SHELL181,CS_HDW2_rightWall,SEC_HDW_Wall

  CMSEL,S,COMPA_HDW1_leftFoot
  AATT,MAT_CONC,,TYPE_SHELL181,CS_HDW1_leftFoot,SEC_HDW_Footing

  CMSEL,S,COMPA_HDW2_leftFoot
  AATT,MAT_CONC,,TYPE_SHELL181,CS_HDW2_leftFoot,SEC_HDW_Footing

  CMSEL,S,COMPA_HDW1_rightFoot
  AATT,MAT_CONC,,TYPE_SHELL181,CS_HDW1_rightFoot,SEC_HDW_Footing

  CMSEL,S,COMPA_HDW2_rightFoot
  AATT,MAT_CONC,,TYPE_SHELL181,CS_HDW2_rightFoot,SEC_HDW_Footing

  CMSEL,S,COMPA_HDW_Slab
  AATT,MAT_CONC,,TYPE_SHELL181,CS_bot,SEC_HDW_Slab

  CMSEL,S,COMPA_HDW_Stiffener
  AATT,MAT_CONC,,TYPE_SHELL181,CS_bot,SEC_HDW_Stiffener

  CMSEL,S,COMPA_HDW_TopBeam
  AATT,MAT_CONC,,TYPE_SHELL181,CS_tunnel,SEC_FRAME_headBeam

  CMSEL,s,COMPA_HDW_BotBeam
  AATT,MAT_CONC,,TYPE_SHELL181,CS_tunnel,SEC_HDW_frontBeam

  CMSEL,s,COMPA_HDW_BackBeam
  AATT,MAT_CONC,,TYPE_SHELL181,CS_tunnel,SEC_FRAME_backBeam

  cmsel,s,COMPA_HDW_Columns
  aatt,MAT_CONC,,TYPE_SHELL181,CS_HDW_columns,SEC_FRAME_Column

  cmsel,s,COMPA_Headwalls
  AESIZE,ALL,FEM_HDW_esize
  AMESH,ALL

  ! TODO  connect all other parts to each other & to tunnel

  l2acnt,'COMPA_floor','COMPL_HDW1_slabInterface',,1
  l2acnt,'COMPA_floor','COMPL_HDW2_slabInterface',,1
*endif


!!                                                                                                !!
!! 4.3  Soil                                                                                      !!
!!                                                                                                !!
! Attributes for soil springs
type , TYPE_link180
real , REAL_normSprings
csys , CS_global
mat  , MAT_soil

!! 4.3.1  Floor slab                                                                              !!
! Bottom supports
cmsel,s,COMPA_floor
esla
nsle
elasticbase,'EBASE_floor','Y',MAT_SOIL_stiffness,-1,-SpringLength,SpringElasticModulus,,,'COMPN_SOILSPR_floor','COMPE_SOILSPR_floor'


!! 4.3.2  Left wall                                                                               !!
! Left wall supports
cmsel,s,COMPA_LeftWall
esla
nsle
elasticbase,'EBASE_leftWall','X',MAT_SOIL_stiffness,-1,-SpringLength,SpringElasticModulus,,,'COMPN_SOILSPR_leftWall','COMPE_SOILSPR_leftWall'


!! 4.3.3  Right wall                                                                              !!
! Right wall supports
cmsel,s,COMPA_RightWall
esla
nsle
elasticbase,'EBASE_rightWall','X',MAT_SOIL_stiffness,-1,SpringLength,SpringElasticModulus,,,'COMPN_SOILSPR_leftWall','COMPE_SOILSPR_leftWall'


!! 4.3.4  Top slab                                                                                !!
! Top supports
cmsel,s,COMPA_Roof
esla
nsle
elasticbase,'EBASE_roof','Y',MAT_SOIL_stiffness,-1,SpringLength,SpringElasticModulus,,,'COMPN_SOILSPR_roof','COMPE_SOILSPR_roof'


!! 4.3.7  Headwalls                                                                               !!
*get,parType,PARM,GEO_HDW_status,TYPE
*if,parType,EQ,0,AND,GEO_HDW_status,GT,0,THEN
  TUNNEL_V2_HDWBC
*endif


!!                                                                                                !!
!! 4.4  Approach slab                                                                             !!
!!                                                                                                !!
*if,GEO_APR_status,eq,1,then
  l2acnt , 'COMPA_roof' , 'COMPL_APR_leftInterface'  ,  , 1
  l2acnt , 'COMPA_roof' , 'COMPL_APR_rightInterface' ,  , 1
*endif


!!                                                                                                !!
!! 4.5  Pinned connections                                                                        !!
!!                                                                                                !!
! Between roof, walls, and approach slabs
*if,GEO_APR_status,eq,1,or,GEO_ROOF_wallConnection,eq,1,then
  csys,CS_Tunnel

  cmsel,s,COMPA_Tunnel
  cmsel,a,COMPA_Approach
  cmsel,a,COMPA_HDW_TopBeam
  lsla,s
  nsll,s,1
  nsel,r,loc,y,GEO_TUN_effH
  cm,COMPN_temp,node

  nsel,r,loc,x,0,GEO_TUN_totEffW,GEO_TUN_effW

  *if,GEO_APR_oneWay,eq,0,then
    cpintf,UX,1e-6
    cpintf,UY,1e-6
    cpintf,UZ,1e-6
  *elseif,GEO_APR_oneWay,eq,1,then
    ! Nodal couplings
    cpintf,UX,1e-6
    cpintf,UZ,1e-6
    cmsel,s,COMPA_Approach
    nsla,u,1
    cpintf,UY,1e-6
    ! One way connection
    cmsel,s,COMPN_temp
    cmsel,s,COMPA_Walls
    esla,s
    nsla,r,1
    esln,r,0
    cm,COMPN_temp2,node
    nsle,s
    cmsel,u,COMPN_temp2
    cm,COMPN_row2,node
    !n2=ndnext(0)
    cmsel,s,COMPN_temp
    cmsel,s,COMPA_Approach
    nsla,r,1
    cm,COMPN_row1,node
    !n1=ndnext(0)
    yDist=FEM_TUN_esize !abs(ny(n1)=ny(n2))
    cmsel,s,COMPN_row1
    cmsel,a,COMPN_row2
    type,TYPE_LINK180
    real,REAL_rigidStrut
    mat,MAT_RIGID
    eintf,5e-2,,low,CS_Tunnel,0,yDist,0

  *endif

  csys,0
*endif

! Between roof precast girders
*if,GEO_ROOF_type,eq,1,and,GEO_ROOF_continuity,eq,0,then
  cmsel,s,COMPA_Roof
  lsla,s
  ! Remove longitudinal lines from selection
  x=0
  *do,nthModule,1,GEO_TUN_Modules+1,1
    lsel,u,loc,x,x
    x=x+GEO_TUN_effW
  *enddo
  nsll,s,1
  ! Create semi-rigid connection
  type,TYPE_COMBIN39
  mat,MAT_CONC
  real,REAL_roofSprings
  eintf,1e-3
*endif

! Between headwall top beam and first/last roof slab girder
*if,GEO_HDW_status,eq,1,and,GEO_FRAME_beamRoofConnection,eq,0,then
  cmsel,s,COMPA_HDW_TopBeam
  lsla,s
  nsll,s,1
  cm,COMPN_temp,node
  cmsel,s,COMPA_Roof
  lsla,s
  nsll,s,1
  cmsel,a,COMPN_temp

  cpintf,rotx,1e-6
  cpintf,roty,1e-6
  cpintf,rotz,1e-6
*endif


!!                                                                                                !!
!! 4.6  Piles                                                                                     !!
!!                                                                                                !!
*if,GEO_PILE_status,eq,1,then
  TUNNEL_V2_FEMPILE
*endif


!!                                                                                                !!
!! 4.7  Soil friction                                                                             !!
!!                                                                                                !!
*get,parmType,PARM,LOAD_thermal,TYPE
*if,parmType,EQ,0,AND,LOAD_thermal,NE,0,THEN
  ! Attributes for frictional soil springs
  TYPE,TYPE_LINK180
  REAL,REAL_longSprings
  MAT,MAT_SOIL

  CSYS,CS_tunnel
  CMSEL,S,COMPA_Tunnel
  cmsel,u,COMPA_innerWalls
  ESLA,S
  NSLE,S
  CM,COMPN_temp,NODE
  *get,nc1,node,,count
  nummrg,node,,,sele
  *get,nc2,node,,count
  *if,nc2,ne,nc1,then
    cm,COMPN_unsel,node
    cmsel,s,COMPN_temp
    cmsel,u,COMPN_unsel
    CM,COMPN_temp,NODE
  *endif
  *get,NC,NODE,,COUNT
  NodeNum=0

  *do,nthNode,1,NC,1
    CMSEL,S,COMPN_temp
    NodeNum = NDNEXT(NodeNum)
    x       = NX(NodeNum)
    y       = NY(NodeNum)
    z       = NZ(NodeNum)
    *get,maxND,NODE,,NUM,MAXD
    NewNode = maxND+1
    N,NewNode,x,y,z+SpringLength
    E,NodeNum,NewNode
    D,NewNode,UZ,0

    cpNum_UX = 0
    cpNum_UY = 0
    *get , cpNum_UX , node , NodeNum , cps , ux
    *get , cpNum_UY , node , NodeNum , cps , uy

    *if,cpNum_UX,gt,0,then
      cp,cpNum_UX,ux,NewNode
    *else
      CP,NEXT,UX,NewNode,NodeNum
    *endif

    *if,cpNum_UY,gt,0,then
      cp,cpNum_UY,uy,NewNode
    *else
      CP,NEXT,UY,NewNode,NodeNum
    *endif
  *enddo
  CSYS,0
*endif


!!                                                                                                !!
!! 4.8  Capture images                                                                            !!
!!                                                                                                !!
ALLSEL
/eshape,1
VIEW4W
/pnum,SEC,1
/number,1
EPLOT
/graphics,FULL
TAKEPIC,'MESH'

/device,VECTOR,ON
/psymb,ESYS,ON
/eshape,0
ESEL,S,MAT,,1
EPLOT
/graphics,FULL
TAKEPIC,'ESYS',1200,1

/psymb,DEFA

ESEL,S,TYPE,,1
VIEW1W
/device,VECTOR,OFF
/eshape,1
/type,,3
/view,1,1,1,1
EPLOT

cmEsysCount=31

*del,cmnames_esys,,nopr
*dim,cmnames_esys,string,248,cmEsysCount
cmnames_esys(1,1)  = 'COMPA_Floor'
cmnames_esys(1,2)  = 'COMPA_Roof'
cmnames_esys(1,3)  = 'COMPA_LeftWall'
cmnames_esys(1,4)  = 'COMPA_RightWall'
cmnames_esys(1,5)  = 'COMPA_bBeam'
cmnames_esys(1,6)  = 'COMPA_tBeam'
cmnames_esys(1,7)  = 'COMPA_Columns'
cmnames_esys(1,8)  = 'COMPA_HDW1_BackBeam'
cmnames_esys(1,9)  = 'COMPA_HDW1_BotBeam'
cmnames_esys(1,10) = 'COMPA_HDW1_leftColumn'
cmnames_esys(1,11) = 'COMPA_HDW1_rightColumn'
cmnames_esys(1,12) = 'COMPA_HDW1_leftFoot'
cmnames_esys(1,13) = 'COMPA_HDW1_rightFoot'
cmnames_esys(1,14) = 'COMPA_HDW1_leftWall'
cmnames_esys(1,15) = 'COMPA_HDW1_rightWall'
cmnames_esys(1,16) = 'COMPA_HDW1_slab'
cmnames_esys(1,17) = 'COMPA_HDW1_leftStiffener'
cmnames_esys(1,18) = 'COMPA_HDW1_rightStiffener'
cmnames_esys(1,19) = 'COMPA_HDW1_topBeam'
cmnames_esys(1,20) = 'COMPA_HDW2_BackBeam'
cmnames_esys(1,21) = 'COMPA_HDW2_BotBeam'
cmnames_esys(1,22) = 'COMPA_HDW2_leftColumn'
cmnames_esys(1,23) = 'COMPA_HDW2_rightColumn'
cmnames_esys(1,24) = 'COMPA_HDW2_leftFoot'
cmnames_esys(1,25) = 'COMPA_HDW2_rightFoot'
cmnames_esys(1,26) = 'COMPA_HDW2_leftWall'
cmnames_esys(1,27) = 'COMPA_HDW2_rightWall'
cmnames_esys(1,28) = 'COMPA_HDW2_slab'
cmnames_esys(1,29) = 'COMPA_HDW2_leftStiffener'
cmnames_esys(1,30) = 'COMPA_HDW2_rightStiffener'
cmnames_esys(1,31) = 'COMPA_HDW2_topBeam'

*del,img_titles,,nopr
*dim,img_titles,string,248,cmEsysCount
img_titles(1,1)  = 'FLOOR SLAB'
img_titles(1,2)  = 'ROOF SLAB'
img_titles(1,3)  = 'LEFT WALL'
img_titles(1,4)  = 'RIGHT WALL'
img_titles(1,5)  = 'BOTTOM BEAM'
img_titles(1,6)  = 'TOP BEAM'
img_titles(1,7)  = 'COLUMNS'
img_titles(1,8)  = 'FRAME 1: BOTTOM BEAM'
img_titles(1,9)  = 'INLET 1: FRONT BEAM'
img_titles(1,10) = 'FRAME 1: LEFT COLUMN'
img_titles(1,11) = 'FRAME 1: RIGHT COLUMN'
img_titles(1,12) = 'INLET 1: LEFT FOOTING'
img_titles(1,13) = 'INLET 1: RIGHT FOOTING'
img_titles(1,14) = 'INLET 1: LEFT WALL'
img_titles(1,15) = 'INLET 1: RIGHT WALL'
img_titles(1,16) = 'INLET 1: FLOOR SLAB'
img_titles(1,17) = 'INLET 1: LEFT FLOOR STIFFENER'
img_titles(1,18) = 'INLET 1: RIGHT FLOOR STIFFENER'
img_titles(1,19) = 'FRAME 1: TOP BEAM'
img_titles(1,20) = 'FRAME 2: BOTTOM BEAM'
img_titles(1,21) = 'INLET 2: FRONT BEAM'
img_titles(1,22) = 'FRAME 2: LEFT COLUMN'
img_titles(1,23) = 'FRAME 2: RIGHT COLUMN'
img_titles(1,24) = 'INLET 2: LEFT FOOTING'
img_titles(1,25) = 'INLET 2: RIGHT FOOTING'
img_titles(1,26) = 'INLET 2: LEFT WALL'
img_titles(1,27) = 'INLET 2: RIGHT WALL'
img_titles(1,28) = 'INLET 2: FLOOR SLAB'
img_titles(1,29) = 'INLET 2: LEFT FLOOR STIFFENER'
img_titles(1,30) = 'INLET 2: RIGHT FLOOR STIFFENER'
img_titles(1,31) = 'FRAME 2: TOP BEAM'

*del,file_names,,nopr
*dim,file_names,string,248,cmEsysCount
file_names(1,1)  = 'esys_tun_FLOOR_SLAB'
file_names(1,2)  = 'esys_tun_ROOF_SLAB'
file_names(1,3)  = 'esys_tun_LEFT_WALL'
file_names(1,4)  = 'esys_tun_RIGHT_WALL'
file_names(1,5)  = 'esys_tun_BOTTOM_BEAM'
file_names(1,6)  = 'esys_tun_TOP_BEAM'
file_names(1,7)  = 'esys_tun_COLUMNS'
file_names(1,8)  = 'esys_fr1_BOTTOM_BEAM'
file_names(1,9)  = 'esys_in1_FRONT_BEAM'
file_names(1,10) = 'esys_fr1_LEFT_COLUMN'
file_names(1,11) = 'esys_fr1_RIGHT_COLUMN'
file_names(1,12) = 'esys_in1_LEFT_FOOTING'
file_names(1,13) = 'esys_in1_RIGHT_FOOTING'
file_names(1,14) = 'esys_in1_LEFT_WALL'
file_names(1,15) = 'esys_in1_RIGHT_WALL'
file_names(1,16) = 'esys_in1_FLOOR_SLAB'
file_names(1,17) = 'esys_in1_L_FLOOR_STIFFENER'
file_names(1,18) = 'esys_in1_R_FLOOR_STIFFENER'
file_names(1,19) = 'esys_fr1_TOP_BEAM'
file_names(1,20) = 'esys_fr2_BOTTOM_BEAM'
file_names(1,21) = 'esys_in2_FRONT_BEAM'
file_names(1,22) = 'esys_fr2_LEFT_COLUMN'
file_names(1,23) = 'esys_fr2_RIGHT_COLUMN'
file_names(1,24) = 'esys_in2_LEFT_FOOTING'
file_names(1,25) = 'esys_in2_RIGHT_FOOTING'
file_names(1,26) = 'esys_in2_LEFT_WALL'
file_names(1,27) = 'esys_in2_RIGHT_WALL'
file_names(1,28) = 'esys_in2_FLOOR_SLAB'
file_names(1,29) = 'esys_in2_L_FLOOR_STIFFENER'
file_names(1,30) = 'esys_in2_R_FLOOR_STIFFENER'
file_names(1,31) = 'esys_fr2_TOP_BEAM'

*do,nthCM,1,cmEsysCount,1
  cmName   = cmnames_esys(1,nthCM)
  imgTitle = img_titles(1,nthCM)
  fileName = file_names(1,nthCM)
  TUNNEL_V2_ESYSPIC , cmName , imgTitle , fileName
*enddo


!!                                                                                                !!
!! 4.9  Create special selection components                                                       !!
!!                                                                                                !!
! Tunnel roof elements that should be considered for shear force design
csys,CS_tunnel

cmsel,s,COMPA_roof
esla,s
nsle,s

! Elements near external walls
nsel , u , loc , x , 0                            , GEO_ROOF_thk
nsel , u , loc , x , GEO_TUN_totEffW-GEO_ROOF_thk , GEO_TUN_totEffW

! Elements near internal walls
*do,nthIWall,1,GEO_IWALL_count,1
  xIWall = GEO_IWALL_x_coords(nthIWall)
  nsel , u , loc , x , xIWall-GEO_ROOF_thk , xIWall+GEO_ROOF_thk
*enddo

! Define element component for shear foce results
esln,r,1
cm,COMPE_ROOF_shear,elem
cmsel,s,COMPA_roof
esla,s
cmsel,u,COMPE_ROOF_shear
cm,COMPE_ROOF_noShear,elem

allsel
csys,0
