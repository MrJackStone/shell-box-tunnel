! TUNNEL_V2_ATTR


/prep7

! Code version
Version=1

!!                                                                                                !!
!! 2.1  Constants                                                                                 !!
!!                                                                                                !!
pi=ACOS(-1)

! Concrete Poisson's coefficient
Poisson=0.2
! Concrete mass density
MassDensity=2500

! Corrected mass density of top slab (accounting for EPS layer)
*get,parType,PARM,EPSThk,TYPE
*if,parType,NE,0,THEN
  EPSThk=0
*endif
TopSlab_EqvMassDensity=2500*(GEO_ROOF_thk-EPSThk)/GEO_ROOF_thk

! Water mass density
MAT_WATER_density = 1000

! Soil porosity (used to calculate mass density increment for saturated soils)
! Recommended value: 0.1
MAT_SOIL_porosity = 0.1

! Soil springs: elastic modulus
SpringElasticModulus=1e9
! Soil springs: length
SpringLength=1
LongitSpringLength=(SpringLength*(MAT_SOIL_stiffness/100e6)<SpringLength)

! Gravitational acceleration
LOAD_g_k = 9.81

! Number of substeps
SubstepCount=20

! Minimum soil cover (smaller depths mean loads are applied directly on top slab)
MinimumSoilCover=1.4

! Cross-sectional area of rigid struts
REAL_rigidStrut_A=1


!!                                                                                                !!
!! 2.2  Indices                                                                                   !!
!!                                                                                                !!
! Coordinate systems
CoordSys          = 11 ! TODO: rename to CS_global
CS_top            = 12
CS_bot            = 13
CS_left           = 14
CS_right          = 15
CS_tunnel         = 16
CS_RevTunnel      = 17
CS_BASE_corbelBot = 1000
CS_BASE_corbelTop = 2000
CS_BASE_iwall     = 3000

! Cross-sections
SEC_ROOF    = 1
SEC_FLOOR   = 2
SEC_LWALL   = 3
SEC_RWALL   = 4
SEC_IWALL   = 5
SEC_APR     = 6
SEC_bBeam   = 7
SEC_tBeam   = 8
SEC_columns = 9

SEC_HDW_Wall       = 10
SEC_HDW_Footing    = 11
SEC_HDW_Slab       = 12
SEC_HDW_Stiffener  = 13
SEC_FRAME_Column   = 14
SEC_FRAME_headBeam = 15
SEC_HDW_frontBeam  = 16
SEC_FRAME_backBeam = 17

SEC_pileInt = 20
SEC_pileExt = 21

SEC_strut = 22

SEC_ROOF_LCORBEL  = 400
SEC_ROOF_RCORBEL  = 500
SEC_FLOOR_LCORBEL = 600
SEC_FLOOR_RCORBEL = 700
SEC_WALL_BCORBEL  = 800
SEC_WALL_TCORBEL  = 900

! Materials
MAT_CONC   = 1
MAT_SOIL   = 2
MAT_CONCTS = 3
MAT_RIGID  = 4

! Element types
TYPE_SHELL181 = 1
TYPE_LINK180  = 2
TYPE_COMBIN39 = 3
TYPE_BEAM188  = 4

! Real constants
REAL_normSprings = 1
REAL_longSprings = 2
REAL_hdwSprings  = 3
REAL_roofSprings = 4
REAL_rigidStrut  = 5


!!                                                                                                !!
!! 2.3  Geometry                                                                                  !!
!!                                                                                                !!
! Inner wall thickness
*if,GEO_TUN_modules,gt,1,then
  *if,GEO_IWALL_type,eq,0,then
    ! Do nothing
  *elseif,GEO_IWALL_type,eq,1,then
    GEO_IWALL_thk = ((GEO_IWALL_topBeamWidth>GEO_IWALL_botBeamWidth)>GEO_IWALL_columnThk)
  *endif
*else
  GEO_IWALL_thk=0
*endif

! Calculate effective spans (distance between mid-planes)
*if,GEO_IWALL_thk,eq,0,then
  Eff_GalleryWidth=GEO_TUN_moduleWidth+GEO_OWALL_thk
*else
  Eff_GalleryWidth=GEO_TUN_moduleWidth+(GEO_OWALL_thk+GEO_IWALL_thk)/2
*endif
Eff_GalleryHeight=GEO_TUN_height+(GEO_FLOOR_thk+GEO_ROOF_thk)/2

GEO_TUN_effW    = Eff_GalleryWidth
GEO_TUN_effH    = Eff_GalleryHeight
GEO_TUN_totEffW = GEO_TUN_effW*GEO_TUN_modules

*if,GEO_HDW_type,EQ,1,THEN
  !!GEO_HDW_angle=90
  *afun,DEG
  GEO_ExtraLength=TAN(GEO_HDW_angle)*GEO_TUN_totEffW
  *afun,RAD
  GEO_TUN_length=GEO_TUN_length+2*GEO_ExtraLength
*else
  GEO_ExtraLength=0
*endif

! Tunnel slope (in degrees)
TunnelSlope=ATAN(GEO_TUN_slope/100)*180/pi

! Traffic/track direction (in radians)
LOAD_LTA_skewRad = LOAD_LTA_skew*(pi/180)

! Area of shell elements
ElementArea=FEM_TUN_esize**2

! Water level (global cartesian coordinate)
*if,GEO_EMB_waterDepth,GE,0,THEN
  WaterY=GEO_EMB_height-GEO_EMB_waterDepth+Eff_GalleryHeight
  WaterHeight=Eff_GalleryHeight+GEO_EMB_height-GEO_EMB_waterDepth
*else
  WaterY=0
  WaterHeight=0
*endif
*if,Waterheight,GT,Eff_GalleryHeight,THEN
  WaterHeight=Eff_GalleryHeight
*endif

! Angle of soil slopes along the tunnel's longitudinal direction
*get,parType,PARM,GEO_EMB_slopeBeg,TYPE
*if,parType,NE,0,THEN
  GalleryAlphai=0
*else
  GalleryAlphai=90-GEO_EMB_slopeBeg
*endif
*get,parType,PARM,GEO_EMB_slopeEnd,TYPE
*if,parType,NE,0,THEN
  GalleryAlphaf=0
*else
  GalleryAlphaf=90-GEO_EMB_slopeEnd
*endif

! Calculate corbel offsets
roof_xProjection   = (GEO_ROOF_thk/2)*(GEO_CORB_width/GEO_CORB_height)
roof_yProjection   = (GEO_OWALL_thk/2)*(GEO_CORB_height/GEO_CORB_width)
GEO_corbelXOff_TOP = GEO_CORB_width+(GEO_OWALL_thk/2)+roof_xProjection
GEO_corbelYOff_TOP = GEO_CORB_height+(GEO_ROOF_thk/2)+roof_yProjection

floor_xProjection  = (GEO_FLOOR_thk/2)*(GEO_CORB_height/GEO_CORB_width)
floor_yProjection  = (GEO_OWALL_thk/2)*(GEO_CORB_height/GEO_CORB_width)
GEO_corbelXOff_BOT = GEO_CORB_width+(GEO_OWALL_thk/2)+floor_xProjection
GEO_corbelYOff_BOT = GEO_CORB_height+(GEO_FLOOR_thk/2)+floor_yProjection

! Calculate approach slab position
*if,GEO_APR_status,EQ,1,THEN
  *afun,deg

  GEO_APR_zAxis = (LOAD_LTA_offsets(1)+LOAD_LTA_offsets(LOAD_LTA_count))/2
  GEO_APR_zAxW  = tan(LOAD_LTA_skew)*(Eff_GalleryWidth*GEO_TUN_modules)/2
  GEO_APR_zS    = GEO_APR_width/(2*cos(LOAD_LTA_skew))
  GEO_APR_zL    = GEO_APR_length*tan(LOAD_LTA_skew)

  GEO_APR_z1 = GEO_APR_zAxis - GEO_APR_zAxW - GEO_APR_zS
  GEO_APR_z2 = GEO_APR_zAxis - GEO_APR_zAxW + GEO_APR_zS
  GEO_APR_z3 = GEO_APR_zAxis + GEO_APR_zAxW - GEO_APR_zS
  GEO_APR_z4 = GEO_APR_zAxis + GEO_APR_zAxW + GEO_APR_zS

  GEO_APR_z1L = GEO_APR_z1 - GEO_APR_zL
  GEO_APR_z2L = GEO_APR_z2 - GEO_APR_zL
  GEO_APR_z3L = GEO_APR_z3 + GEO_APR_zL
  GEO_APR_z4L = GEO_APR_z4 + GEO_APR_zL

  *afun,rad
*endif

! Calculate roof gap positions
*if,GEO_ROOF_gapStatus,eq,1,then
  GEO_ROOF_gapCount        = GEO_ROOF_gapStrutCount+1
  GEO_ROOF_gapWidth        = GEO_ROOF_gapEnd-GEO_ROOF_gapBeg
  GEO_ROOF_gapStrutSpacing = (GEO_ROOF_gapWidth-(GEO_ROOF_gapStrutCount*GEO_ROOF_gapStrutWidth))/GEO_ROOF_gapCount
  GEO_ROOF_gapStrutPitch   = GEO_ROOF_gapStrutSpacing+GEO_ROOF_gapStrutWidth

  *del , GEO_ROOF_gap_z_begs ,  , nopr
  *del , GEO_ROOF_gap_z_ends ,  , nopr
  *dim , GEO_ROOF_gap_z_begs ,  , GEO_ROOF_gapCount
  *dim , GEO_ROOF_gap_z_ends ,  , GEO_ROOF_gapCount

  *vfill , GEO_ROOF_gap_z_begs , ramp                , GEO_ROOF_gapBeg , GEO_ROOF_gapStrutPitch
  *voper , GEO_ROOF_gap_z_ends , GEO_ROOF_gap_z_begs , add             , GEO_ROOF_gapStrutSpacing
*endif

! Calculate precast girder positions
*if,GEO_ROOF_type,eq,1,then
  GEO_ROOF_wallConnection=1

  GEO_girderCount=NINT((GEO_TUN_length/GEO_ROOF_precastWidth)-0.5)
  remLength=GEO_TUN_length-(GEO_girderCount*GEO_ROOF_precastWidth)
  extrmbc=GEO_ROOF_precastWidth+(remLength/2)

  *del,GEO_girderZ,,nopr
  *dim,GEO_girderZ,array,GEO_girderCount-1
  *vfill,GEO_girderZ,ramp,extrmbc,GEO_ROOF_precastWidth
*endif

! Check corbel status and pinned roof status
*if,GEO_ROOF_wallConnection,eq,1,then
  *if,GEO_CORB_status,eq,1,then
    GEO_CORB_status=3
    *msg,WARN
WARNING: Pin and corbel are incompatible. GEO_CORB_status set to 3 (bottom slab only).
  *elseif,GEO_CORB_status,eq,2,then
    GEO_CORB_status=0
    *msg,WARN
WARNING: Pin and corbel are incompatible. GEO_CORB_status set to 0 (OFF).
  *endif
*endif

! Inner wall positions
GEO_IWALL_count = GEO_TUN_modules-1

*del,GEO_IWALL_x_coords,,nopr
*dim,GEO_IWALL_x_coords,,GEO_IWALL_count
*vfill,GEO_IWALL_x_coords,ramp,GEO_TUN_effW,GEO_TUN_effW

! Inner wall openings
*if,GEO_TUN_modules,gt,1,and,GEO_IWALL_type,eq,1,then
  GEO_TUN_opW  = (GEO_TUN_length-GEO_IWALL_columnCount*GEO_IWALL_columnWidth)/(GEO_IWALL_columnCount-1)
  GEO_TUN_opH  = GEO_TUN_effH-GEO_IWALL_topBeamHeight-GEO_IWALL_botBeamHeight
  GEO_TUN_colE = GEO_TUN_opW+GEO_IWALL_columnWidth
  ! Relative Z coordinate for opening centers
  *del,GEO_TUN_ozCenter
  *dim,GEO_TUN_ozCenter,array,GEO_IWALL_columnCount-1
  *vfill,GEO_TUN_ozCenter,ramp,GEO_TUN_colE-(GEO_TUN_opW/2),GEO_TUN_colE
  !x0=(i-1)*GEO_TUN_colE
  !GEO_TUN_colE-(GEO_TUN_iwOW/2)
  ! Relative Y coordinate for opening centers
  GEO_TUN_oyCenter = (GEO_TUN_effH-GEO_IWALL_topBeamHeight+GEO_IWALL_botBeamHeight)/2
*endif

! Wall height at the front of the inlets
setdefa,'GEO_HDW_endH',0


!!                                                                                                !!
!! 2.4  Materials                                                                                 !!
!!                                                                                                !!
! Concrete's elastic modulus
ElasticModulus = 4760*SQRT(MAT_TUN_fck*1e-6)*1e6
MAT_CONC_E     = ElasticModulus

! Soil spring stiffness
SpringConstant = MAT_SOIL_stiffness*ElementArea
SpringArea     = SpringConstant*SpringLength/SpringElasticModulus

! Active Earth Pressure Coeficient (Ka)
ActiveEPCoefficient = TAN((45-(MAT_SOIL_frictionAngle/2))*pi/180)**2
! Rest Earth Pressure Coefficient (K0)
RestEPCoefficient = 1-SIN(MAT_SOIL_frictionAngle*pi/180)

! Rigid struts
MAT_RIGID_E       = 2e9
MAT_RIGID_Poisson = 0.3


!!                                                                                                !!
!! 2.5  Loads                                                                                     !!
!!                                                                                                !!
loadtrain,LOAD_LTA_name,,,,20,,'LOAD_LTA_FORCES'
! LOAD_LTA_FORCES_count
! LOAD_LTA_FORCES_length
! LOAD_LTA_FORCES_positions
! LOAD_LTA_FORCES_loads

! Calculate design values of loads
LOAD_g_d = LOAD_g_k*LOAD_gammaG

*del,LOAD_LTA_FORCES_loads_d,,nopr
*voper,LOAD_LTA_FORCES_loads_d,LOAD_LTA_FORCES_loads,mult,LOAD_gammaQ

LOAD_WATER_gammaw_d  = MAT_WATER_density*LOAD_g_d

LOAD_SOIL_gammat_d   = MAT_SOIL_density*LOAD_g_d
LOAD_SOIL_gammaw_d   = MAT_SOIL_porosity*LOAD_WATER_gammaw_d
LOAD_SOIL_gammasat_d = LOAD_SOIL_gammat_d+LOAD_SOIL_gammaw_d
LOAD_SOIL_gammasub_d = LOAD_SOIL_gammasat_d-LOAD_WATER_gammaw_d

! Adjust impact coefficient
*if,LOAD_LTA_impactOpt,eq,0,then
  LOAD_LTA_impactCoefficient = 1
*endif

! Z coordinate of point where tunnel axis intersects railway axis (pivot point)
! TODO: this is the same value calculated for GEO_APR_zAxis
LOAD_z0 = (LOAD_LTA_offsets(1)+LOAD_LTA_offsets(LOAD_LTA_count))/2

! TODO  implement buoyancy calculation correctly
! Buoyancy load on floor slab
! Buoyancy=WaterHeight*Gammaw


!!                                                                                                !!
!! 2.6  Mesh                                                                                      !!
!!                                                                                                !!
*if,GEO_ROOF_type,eq,1,and,GEO_ROOF_continuity,eq,0,then
  FEM_ROOF_posKRot=MAT_CONC_E*FEM_TUN_esize*(GEO_ROOF_precastHeight**3)/(12*GEO_ROOF_precastWidth)
  FEM_ROOF_negKRot=-FEM_ROOF_posKRot
*else
  FEM_ROOF_posKRot=1
  FEM_ROOF_negKRot=-FEM_ROOF_posKRot
*endif


!!                                                                                                !!
!! 2.7  Element types                                                                             !!
!!                                                                                                !!
! Tunnel walls/slabs
et,type_shell181,181

! Soil springs
et,type_link180,180

! Torsional girder springs (single DOF: ROTX)
et,type_combin39,39,,,4

! Piles
et,type_beam188,188


!!                                                                                                !!
!! 2.8  Materials TODO: repeated header                                                           !!
!!                                                                                                !!
! Concrete
mp , ex   , MAT_CONC,ElasticModulus
mp , prxy , MAT_CONC,Poisson
mp , dens , MAT_CONC,MassDensity
mp , alpx , MAT_CONC,1.3e-5

! Soil
mp , ex   , MAT_SOIL,SpringElasticModulus
mp , prxy , MAT_SOIL,Poisson

! Concrete: top slab with equivalent mass density
mp , ex   , MAT_CONCTS,ElasticModulus
mp , prxy , MAT_CONCTS,Poisson
mp , dens , MAT_CONCTS,TopSlab_EqvMassDensity
mp , alpx , MAT_CONCTS,1.3e-5

! Rigid struts
mp , ex   , MAT_RIGID, MAT_RIGID_E
mp , prxy , MAT_RIGID, MAT_RIGID_Poisson


!!                                                                                                !!
!! 2.9  Coordinate systems                                                                        !!
!!                                                                                                !!
! Global cartesian
clocal,CoordSys,cart,0,0,0,0,0,0
csys,0

!! 2.9.1  Local systems                                                                           !!
! ! Top slab
clocal,   CS_top, CART,  0,  0,  0,    0, -90-TunnelSlope,    0
clocal,   CS_top, CART,  0,  0,  0, -180,               0,    0
csys,0
! Bottom slab
clocal,   CS_bot, CART,  0,  0,  0,    0,  90-TunnelSlope,    0
csys,0
! Left wall
clocal,  CS_left, CART,  0,  0,  0,    0,    -TunnelSlope,    0
clocal,  CS_left, CART,  0,  0,  0,    0,               0,  -90
clocal,  CS_left, CART,  0,  0,  0,  -90,               0,    0
csys,0
! Right wall (also used for inner walls)
clocal, CS_right, CART,  0,  0,  0,    0,    -TunnelSlope,    0
clocal, CS_right, CART,  0,  0,  0,    0,               0,   90
clocal, CS_right, CART,  0,  0,  0,   90,               0,    0
csys,0
! Tunnel
clocal,CS_tunnel, CART,  0,  0,  0,    0,    -TunnelSlope,    0
clocal,CS_RevTunnel, CART,GEO_TUN_totEffW,0,GEO_TUN_length
clocal,CS_RevTunnel, CART, 0, 0, 0,,,180
csys,0

! Corbel coordinate systems
xWall=0
*do,nthWall,1,GEO_TUN_modules+1,1
  nthCS=CS_BASE_corbelBot+nthWall
  csys,CS_Tunnel
  clocal,nthCS,CART,xWall,0,0,0,0,0

  mthCS=CS_BASE_corbelTop+nthWall
  csys,CS_Tunnel
  clocal,mthCS,CART,xWall,Eff_GalleryHeight,0,0,0,0

  xWall=xWall+GEO_TUN_effW
*enddo
csys,0

! Inner wall coordinate systems
*if,GEO_TUN_modules,gt,1,then
  *del,CS_IWALL_beams
  *del,CS_IWALL_columns
  *dim,CS_IWALL_beams,array,GEO_TUN_modules-1
  *dim,CS_IWALL_columns,array,GEO_TUN_modules-1
  xWall=0
  *do,nthWall,1,GEO_TUN_modules-1,1
    beamCS=CS_BASE_iwall+(2*nthWall-1)
    colCS=CS_BASE_iwall+(2*nthWall)

    xWall=xWall+GEO_TUN_effW
    csys,CS_Tunnel
    clocal,beamCS,cart,xWall,0,0,,,-90
    csys,beamCS
    clocal,colCS,cart,0,0,0,90

    CS_IWALL_beams(nthWall)=beamCS
    CS_IWALL_columns(nthWall)=colCS
  *enddo
  csys,0
*endif


!!                                                                                                !!
!! 2.10  Sections                                                                                 !!
!!                                                                                                !!
! Soil springs
r,REAL_normSprings,SpringArea,0,-1

! Frictional soil springs
r,REAL_longSprings,SpringArea/20,0,0

! Torsional roof slab springs
r,REAL_roofSprings,-1,FEM_ROOF_negKRot,0,0,1,FEM_ROOF_posKRot

! Rigid struts to vertically connect approach and roof slabs one way
r,REAL_rigidStrut,REAL_rigidStrut_A,0,-1

! Tunnel left wall
sectype,SEC_LWALL,SHELL,,'LWALL'
secdata,GEO_OWALL_thk,1
!secoffset,BOT

! Tunnel right wall
sectype,SEC_RWALL,SHELL,,'RWALL'
secdata,GEO_OWALL_thk,1
!secoffset,TOP

! Tunnel inner walls
sectype,SEC_IWALL,SHELL,,'IWALL'
secdata,GEO_IWALL_thk,1

! Tunnel floor slab
sectype,SEC_FLOOR,SHELL,,'FLOOR'
secdata,GEO_FLOOR_thk,1
!secoffset,BOT

! Tunnel ceiling slab
sectype,SEC_ROOF,SHELL,,'ROOF'
secdata,GEO_ROOF_thk,1
!secoffset,TOP

*if,GEO_APR_status,eq,1,then
  sectype,SEC_APR,shell,,'APR'
  secdata,GEO_APR_thk,MAT_CONC
*endif

! Top beam (inner walls)
sectype,SEC_tBeam,shell,,'TBEAM'
secdata,GEO_IWALL_topBeamWidth,MAT_CONC

! Bottom beam (inner walls)
sectype,SEC_bBeam,shell,,'BBEAM'
secdata,GEO_IWALL_botBeamWidth,MAT_CONC

! Columns (inner walls)
sectype,SEC_columns,shell,,'COLS'
secdata,GEO_IWALL_columnThk,MAT_CONC

*if,GEO_PILE_status,eq,1,then
  ! Piles (external walls)
  sectype,SEC_pileExt,beam,csolid,'PILEEXT'
  secdata,GEO_PILE_EXT_diameter/2

  ! Piles (external walls)
  sectype,SEC_pileInt,beam,csolid,'PILEINT'
  secdata,GEO_PILE_INT_diameter/2
*endif

*if,GEO_ROOF_gapStatus,eq,1,and,GEO_ROOF_gapStrutCount,gt,0,then
  sectype,SEC_strut,shell,,'STRUT'
  secdata,GEO_ROOF_gapStrutHeight,MAT_CONC
*endif

*if,GEO_CORB_status,GE,1,THEN
  !TUNNEL_V2_SECCORBEL, namePrefix, corbelParallel, corbelOrtho,  baseThk, orthoThk,           corbelLen,           base_SEC,           base_CS,  dir

  ! Top slab, left side corbels
  TUNNEL_V2_SECCORBEL,       'TL_',    GEO_CORB_width, GEO_CORB_height,  GEO_ROOF_thk,  GEO_OWALL_thk,  GEO_corbelXOff_TOP,   SEC_ROOF_LCORBEL, CS_BASE_corbelTop,  'X'

  ! Top slab, right side corbels
  TUNNEL_V2_SECCORBEL,       'TR_',    GEO_CORB_width, GEO_CORB_height,  GEO_ROOF_thk,  GEO_OWALL_thk, -GEO_corbelXOff_TOP,   SEC_ROOF_RCORBEL, CS_BASE_corbelTop,  'X'

  ! Bottom slab, left side corbels
  TUNNEL_V2_SECCORBEL,       'BL_',    GEO_CORB_width, GEO_CORB_height, GEO_FLOOR_thk,  GEO_OWALL_thk,  GEO_corbelXOff_BOT,  SEC_FLOOR_LCORBEL, CS_BASE_corbelBot,  'X'

  ! Bottom slab, right side corbels
  TUNNEL_V2_SECCORBEL,       'BR_',    GEO_CORB_width, GEO_CORB_height, GEO_FLOOR_thk,  GEO_OWALL_thk, -GEO_corbelXOff_BOT,  SEC_FLOOR_RCORBEL, CS_BASE_corbelBot,  'X'

  ! Walls, bottom corbels
  TUNNEL_V2_SECCORBEL,       'WB_',    GEO_CORB_height, GEO_CORB_width,  GEO_OWALL_thk, GEO_FLOOR_thk,  GEO_corbelYOff_BOT,   SEC_WALL_BCORBEL, CS_BASE_corbelBot,  'Y'

  ! Walls, top corbels
  TUNNEL_V2_SECCORBEL,       'WT_',    GEO_CORB_height, GEO_CORB_width,  GEO_OWALL_thk,  GEO_ROOF_thk, -GEO_corbelYOff_BOT,   SEC_WALL_TCORBEL, CS_BASE_corbelTop,  'Y'

*endif


!!                                                                                                !!
!! 2.11  Headwalls                                                                                !!
!!                                                                                                !!
*get,parType,PARM,GEO_HDW_status,TYPE
*if,parType,EQ,0,AND,GEO_HDW_status,GT,0,THEN
  TUNNEL_V2_HDWATTR
*endif


!!                                                                                                !!
!! 2.12  Param refactoring                                                                        !!
!!                                                                                                !!
MAT_CONC_Poisson   = Poisson
MAT_CONC_dens      = MassDensity
GEO_TUN_epsThk     = EPSThk

MAT_SOIL_E         = SpringElasticModulus

FEM_SPR_normLength = SpringLength
FEM_SPR_longLength = LongitSpringLength

SOLU_nsubst        = SubstepCount

LOAD_minSoilCover  = MinimumSoilCover

MAT_CONC_E         = ElasticModulus

FEM_SPR_kLink      = SpringConstant
FEM_SPR_area       = SpringArea

MAT_SOIL_ka        = ActiveEPCoefficient
MAT_SOIL_k0        = RestEPCoefficient

!GEO_TUN_effW       = Eff_GalleryWidth
!GEO_TUN_effH       = Eff_GalleryHeight

GEO_TUN_totEffW    = GEO_TUN_effW*GEO_TUN_modules

GEO_TUN_slopeDeg   = 180*atan(GEO_TUN_slope/100)/PI
GEO_TUN_slopeRad   = GEO_TUN_slopeDeg*PI/180
