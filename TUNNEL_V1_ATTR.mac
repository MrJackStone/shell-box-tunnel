!!
!!
!! 2. ATTRIBUTES
!!
!!
/prep7

! Code version
Version=1

!!
!! 2.0 REFACTORING INPUTS
!!
LOAD_dist     = DeltaZOffset
LOAD_impact   = ImpactCoefficient
LOAD_posCount = xOffsetCount
LOAD_zoff     = zOffset
*del,LOAD_pos
*dim,LOAD_pos,ARRAY,LOAD_posCount
*vfun,LOAD_pos,COPY,xOffsets

FEM_TUN_esize = ElementSize
!
!
!
!!
!! 2.1 CONSTANTS
!!
pi=ACOS(-1)

! Concrete Poisson's coefficient
Poisson=0.2
! Concrete mass density
MassDensity=2500

! Corrected mass density of top slab (accounting for EPS layer)
*get,parType,PARM,EPSThk,TYPE
*if,parType,NE,0,THEN
    EPSThk=0
*endif
TopSlab_EqvMassDensity=2500*(GEO_ROOF_thk-EPSThk)/RoofThk

! Water mass density
WaterDensity=1000
! Mass density increment for saturated soils
SaturationIncrement=100

! Soil springs: elastic modulus
SpringElasticModulus=1e9
! Soil springs: length
SpringLength=1
LongitSpringLength=SpringLength*(MAT_SOIL_stiffness/100e6)
COMPARE,'LongitSpringLength','MIN',2,LongitSpringLength,SpringLength

! Gravitational acceleration
Gravity=9.81

! Number of substeps
SubstepCount=20

! Minimum soil cover (smaller depths mean loads are applied directly on top slab)
MinimumSoilCover=1.4

! Cross-sectional area of rigid struts
REAL_rigidStrut_A=1
!
!
!
!!
!! 2.2 ATTRIBUTE NUMBERS
!!
! Coordinate systems
CoordSys=11
CS_top=12
CS_bot=13
CS_left=14
CS_right=15
CS_tunnel=16
CS_RevTunnel=17
CS_BASE_corbelBot=1000
CS_BASE_corbelTop=2000
CS_BASE_iwall=3000

! Cross-sections
SEC_ROOF=1
SEC_FLOOR=2
SEC_LWALL=3
SEC_RWALL=4
SEC_IWALL=5
SEC_APR=6
SEC_bBeam=7
SEC_tBeam=8
SEC_columns=9

SEC_HDW_Wall      = 10
SEC_HDW_Footing   = 11
SEC_HDW_Slab      = 12
SEC_HDW_Stiffener = 13
SEC_HDW_Column    = 14
SEC_HDW_headBeam  = 15
SEC_HDW_frontBeam = 16
SEC_HDW_backBeam  = 17

SEC_pileInt=20
SEC_pileExt=21

SEC_ROOF_LCORBEL=400
SEC_ROOF_RCORBEL=500
SEC_FLOOR_LCORBEL=600
SEC_FLOOR_RCORBEL=700
SEC_WALL_BCORBEL=800
SEC_WALL_TCORBEL=900

! Materials
MAT_CONC=1
MAT_SOIL=2
MAT_CONCTS=3
MAT_RIGID=4

! Element types
TYPE_SHELL181=1
TYPE_LINK180=2
TYPE_COMBIN39=3
TYPE_BEAM188=4

! Real constants
REAL_normSprings=1
REAL_longSprings=2
REAL_hdwSprings=3
REAL_roofSprings=4
REAL_rigidStrut=5


!!
!! 2.3 GEOMETRY
!!
! Inner wall thickness
*if,GEO_TUN_modules,gt,1,then
    *if,GEO_IWALL_type,eq,0,then
        ! Do nothing
    *elseif,GEO_IWALL_type,eq,1,then
        GEO_IWALL_thk = ((GEO_IWALL_topBeamWidth>GEO_IWALL_botBeamWidth)>GEO_IWALL_columnThk)
    *endif
*else
    GEO_IWALL_thk=0
*endif

! Calculate effective spans (distance between mid-planes)
*if,GEO_IWALL_thk,eq,0,then
    Eff_GalleryWidth=GEO_TUN_moduleWidth+GEO_OWALL_thk
*else
    Eff_GalleryWidth=GEO_TUN_moduleWidth+(GEO_OWALL_thk+GEO_IWALL_thk)/2
*endif
Eff_GalleryHeight=GEO_TUN_height+(GEO_FLOOR_thk+GEO_ROOF_thk)/2

GEO_TUN_effW       = Eff_GalleryWidth
GEO_TUN_effH       = Eff_GalleryHeight
GEO_TUN_totEffW    = GEO_TUN_effW*GEO_TUN_modules

*if,GEO_HDW_type,EQ,1,THEN
    !!GEO_HDW_angle=90
    *afun,DEG
    GEO_ExtraLength=TAN(GEO_HDW_angle)*GEO_TUN_totEffW
    *afun,RAD
    GEO_TUN_length=GEO_TUN_length+2*GEO_ExtraLength
*else
    GEO_ExtraLength=0
*endif

! Tunnel slope (in degrees)
TunnelSlope=ATAN(GEO_TUN_slope/100)*180/pi

! Traffic/track direction (in radians)
LOAD_LTA_skewRad = LOAD_LTA_skew*(pi/180)

! Area of shell elements
ElementArea=ElementSize**2

! Water level (global cartesian coordinate)
*if,GEO_EMB_waterDepth,GE,0,THEN
    WaterY=GEO_EMB_height-GEO_EMB_waterDepth+Eff_GalleryHeight
    WaterHeight=Eff_GalleryHeight+GEO_EMB_height-GEO_EMB_waterDepth
*else
    WaterY=0
    WaterHeight=0
*endif
*if,Waterheight,GT,Eff_GalleryHeight,THEN
    WaterHeight=Eff_GalleryHeight
*endif

! Angle of soil slopes along the tunnel's longitudinal direction
*get,parType,PARM,GEO_EMB_slopeBeg,TYPE
*if,parType,NE,0,THEN
    GalleryAlphai=0
*else
    GalleryAlphai=90-GEO_EMB_slopeBeg
*endif
*get,parType,PARM,GEO_EMB_slopeEnd,TYPE
*if,parType,NE,0,THEN
    GalleryAlphaf=0
*else
    GalleryAlphaf=90-GEO_EMB_slopeEnd
*endif

! Calculate corbel offsets
roof_xProjection=(GEO_ROOF_thk/2)*(GEO_CORB_width/GEO_CORB_height)
roof_yProjection=(GEO_OWALL_thk/2)*(GEO_CORB_height/GEO_CORB_width)
GEO_corbelXOff_TOP=GEO_CORB_width+(GEO_OWALL_thk/2)+roof_xProjection
GEO_corbelYOff_TOP=GEO_CORB_height+(GEO_ROOF_thk/2)+roof_yProjection

floor_xProjection=(GEO_FLOOR_thk/2)*(GEO_CORB_height/GEO_CORB_width)
floor_yProjection=(GEO_OWALL_thk/2)*(GEO_CORB_height/GEO_CORB_width)
GEO_corbelXOff_BOT=GEO_CORB_width+(GEO_OWALL_thk/2)+floor_xProjection
GEO_corbelYOff_BOT=GEO_CORB_height+(GEO_FLOOR_thk/2)+floor_yProjection

! Calculate approach slab position
*if,GEO_APR_status,EQ,1,THEN
    *afun,DEG

    GEO_APR_zAxis=LOAD_zoff+((LOAD_lineCount-1)*LOAD_dist)/2
    GEO_APR_zAxW=tan(LOAD_LTA_skew)*(Eff_GalleryWidth*GEO_TUN_modules)/2
    GEO_APR_zS=GEO_APR_width/(2*cos(LOAD_LTA_skew))
    GEO_APR_zL=GEO_APR_length*tan(LOAD_LTA_skew)

    GEO_APR_z1 = GEO_APR_zAxis - GEO_APR_zAxW - GEO_APR_zS
    GEO_APR_z2 = GEO_APR_zAxis - GEO_APR_zAxW + GEO_APR_zS
    GEO_APR_z3 = GEO_APR_zAxis + GEO_APR_zAxW - GEO_APR_zS
    GEO_APR_z4 = GEO_APR_zAxis + GEO_APR_zAxW + GEO_APR_zS

    GEO_APR_z1L = GEO_APR_z1 - GEO_APR_zL
    GEO_APR_z2L = GEO_APR_z2 - GEO_APR_zL
    GEO_APR_z3L = GEO_APR_z3 + GEO_APR_zL
    GEO_APR_z4L = GEO_APR_z4 + GEO_APR_zL

    *afun,RAD
*endif

! Calculate precast girder positions
*if,GEO_ROOF_type,eq,1,then
    GEO_ROOF_wallConnection=1

    GEO_girderCount=NINT((GEO_TUN_length/GEO_ROOF_precastWidth)-0.5)
    remLength=GEO_TUN_length-(GEO_girderCount*GEO_ROOF_precastWidth)
    extrmbc=GEO_ROOF_precastWidth+(remLength/2)

    *del,GEO_girderZ
    *dim,GEO_girderZ,array,GEO_girderCount-1
    *vfill,GEO_girderZ,ramp,extrmbc,GEO_ROOF_precastWidth
*endif

! Check corbel status and pinned roof status
*if,GEO_ROOF_wallConnection,eq,1,then
    *if,GEO_CORB_status,eq,1,then
        GEO_CORB_status=3
        *msg,WARN
WARNING: Pin and corbel are incompatible. GEO_CORB_status set to 3 (bottom slab only).
    *elseif,GEO_CORB_status,eq,2,then
        GEO_CORB_status=0
        *msg,WARN
WARNING: Pin and corbel are incompatible. GEO_CORB_status set to 0 (OFF).
    *endif
*endif

! Inner wall openings
*if,GEO_TUN_modules,gt,1,and,GEO_IWALL_type,eq,1,then
    GEO_TUN_opW=(GEO_TUN_length-GEO_IWALL_columnCount*GEO_IWALL_columnWidth)/(GEO_IWALL_columnCount-1)
    GEO_TUN_opH=GEO_TUN_effH-GEO_IWALL_topBeamHeight-GEO_IWALL_botBeamHeight
    GEO_TUN_colE=GEO_TUN_opW+GEO_IWALL_columnWidth
    ! Relative Z coordinate for opening centers
    *del,GEO_TUN_ozCenter
    *dim,GEO_TUN_ozCenter,array,GEO_IWALL_columnCount-1
    *vfill,GEO_TUN_ozCenter,ramp,GEO_TUN_colE-(GEO_TUN_opW/2),GEO_TUN_colE
    !x0=(i-1)*GEO_TUN_colE
    !GEO_TUN_colE-(GEO_TUN_iwOW/2)
    ! Relative Y coordinate for opening centers
    GEO_TUN_oyCenter=(GEO_TUN_effH-GEO_IWALL_topBeamHeight+GEO_IWALL_botBeamHeight)/2
*endif

! Wall height at the front of the inlets
setdefa,'GEO_HDW_endH',0
!
!
!
!!
!! 2.4 MATERIALS
!!
! Concrete's elastic modulus
ElasticModulus=4760*SQRT(MAT_TUN_fck*1e-6)*1e6
MAT_CONC_E=ElasticModulus

! Soil spring stiffness
SpringConstant=MAT_SOIL_stiffness*ElementArea
SpringArea=SpringConstant*SpringLength/SpringElasticModulus

! Active Earth Pressure Coeficient (Ka)
ActiveEPCoefficient=TAN((45-(MAT_SOIL_frictionAngle/2))*pi/180)**2
! Rest Earth Pressure Coefficient (K0)
RestEPCoefficient=1-SIN(MAT_SOIL_frictionAngle*pi/180)

! Rigid struts
MAT_RIGID_E=2e9
MAT_RIGID_Poisson=0.3



!!
!! 2.5 LOADS
!!
! Specific weight: water
Gammaw=WaterDensity*Gravity
! Specific weight: dry soil
Gammat=MAT_SOIL_density*Gravity
! Specific weight: saturated soil
GammaSAT=Gammat+(SaturationIncrement*Gravity)
! Specific weight: submerged soil
GammaSUB=GammaSAT-Gammaw

! Tensão vertical devido à camada de cobrimento
*if,GEO_EMB_waterDepth,GE,0,AND,GEO_EMB_waterDepth,LT,GEO_EMB_height,THEN
    SoilPressure=Gammat*GEO_EMB_waterDepth+GammaSAT*(GEO_EMB_height-GEO_EMB_waterDepth)
*else
    SoilPressure=Gammat*GEO_EMB_height
*endif
NodalSoilLoad=SoilPressure*ElementArea

! Buoyancy load on floor slab
Buoyancy=WaterHeight*Gammaw
BuoyancyLoad=Buoyancy*ElementArea

! LOADTRAIN, LTname, repetitions, offset, impactCoef, udlLen
ltCenteringOffset=0!Eff_GalleryWidth/2
ImpactCoefficient=1 ! Uniform impact coefficient deactivated. Using AREMA formulation (implemented directly in TUNNEL_V1_VERBOUSSINESQ)
LOADTRAIN, LOAD_LTA_name,,ltCenteringOffset,ImpactCoefficient, 20
LOAD_LTPtCount=LOADTRAIN_VAR_count

! Z coordinate of each railway line
*del,zOffsets
*dim,zOffsets,ARRAY,LOAD_lineCount
zOff=zOffset
*do,nthLine,1,LOAD_lineCount,1
    zOffsets(nthLine)=zOff
    zOff=zOff+DeltaZOffset
*enddo

! Z coordinate of point where tunnel axis intersects railway axis (pivot point)
LOAD_z0=LOAD_zoff+((LOAD_lineCount-1)*LOAD_dist)/2
!
!
!
!!
!! 2.6 MESH
!!
*if,GEO_ROOF_type,eq,1,and,GEO_ROOF_continuity,eq,0,then
    FEM_ROOF_posKRot=MAT_CONC_E*FEM_TUN_esize*(GEO_ROOF_precastHeight**3)/(12*GEO_ROOF_precastWidth)
    FEM_ROOF_negKRot=-FEM_ROOF_posKRot
*else
    FEM_ROOF_posKRot=1
    FEM_ROOF_negKRot=-FEM_ROOF_posKRot
*endif
!
!
!
!!
!! 2.7 ELEMENT TYPES
!!
! Tunnel walls/slabs
ET,TYPE_SHELL181,181

! Soil springs
ET,TYPE_LINK180,180

! Torsional girder springs (single DOF: ROTX)
et,TYPE_COMBIN39,39,,,4

! Piles
et,TYPE_BEAM188,188



!!
!! 2.8 MATERIALS
!!
! Concrete
MP , EX   , MAT_CONC,ElasticModulus
MP , PRXY , MAT_CONC,Poisson
MP , DENS , MAT_CONC,MassDensity
MP , ALPX , MAT_CONC,1.3e-5

! Soil
MP , EX   , MAT_SOIL,SpringElasticModulus
MP , PRXY , MAT_SOIL,Poisson

! Concrete: top slab with equivalent mass density
MP , EX   , MAT_CONCTS,ElasticModulus
MP , PRXY , MAT_CONCTS,Poisson
MP , DENS , MAT_CONCTS,TopSlab_EqvMassDensity
MP , ALPX , MAT_CONCTS,1.3e-5

! Rigid struts
mp , ex   , MAT_RIGID, MAT_RIGID_E
mp , prxy , MAT_RIGID, MAT_RIGID_Poisson



!!
!! 2.9 COORDINATE SYSTEMS
!!
! Global cartesian
CLOCAL,CoordSys,CART,0,0,0,0,0,0
CSYS,0

!! 2.9.1 LOCAL SYSTEMS
!!
! ! Top slab
CLOCAL,   CS_top, CART,  0,  0,  0,    0, -90-TunnelSlope,    0
CLOCAL,   CS_top, CART,  0,  0,  0, -180,               0,    0
CSYS,0
! Bottom slab
CLOCAL,   CS_bot, CART,  0,  0,  0,    0,  90-TunnelSlope,    0
CSYS,0
! Left wall
CLOCAL,  CS_left, CART,  0,  0,  0,    0,    -TunnelSlope,    0
CLOCAL,  CS_left, CART,  0,  0,  0,    0,               0,  -90
CLOCAL,  CS_left, CART,  0,  0,  0,  -90,               0,    0
CSYS,0
! Right wall (also used for inner walls)
CLOCAL, CS_right, CART,  0,  0,  0,    0,    -TunnelSlope,    0
CLOCAL, CS_right, CART,  0,  0,  0,    0,               0,   90
CLOCAL, CS_right, CART,  0,  0,  0,   90,               0,    0
CSYS,0
! Tunnel
CLOCAL,CS_tunnel, CART,  0,  0,  0,    0,    -TunnelSlope,    0
CLOCAL,CS_RevTunnel, CART,GEO_TUN_totEffW,0,GEO_TUN_length
CLOCAL,CS_RevTunnel, CART, 0, 0, 0,,,180
CSYS,0

! Corbel coordinate systems
xWall=0
*do,nthWall,1,GEO_TUN_modules+1,1
    nthCS=CS_BASE_corbelBot+nthWall
    CSYS,CS_Tunnel
    CLOCAL,nthCS,CART,xWall,0,0,0,0,0

    mthCS=CS_BASE_corbelTop+nthWall
    CSYS,CS_Tunnel
    CLOCAL,mthCS,CART,xWall,Eff_GalleryHeight,0,0,0,0

    xWall=xWall+GEO_TUN_effW
*enddo
CSYS,0

! Inner wall coordinate systems
*if,GEO_TUN_modules,gt,1,then
    *del,CS_IWALL_beams
    *del,CS_IWALL_columns
    *dim,CS_IWALL_beams,array,GEO_TUN_modules-1
    *dim,CS_IWALL_columns,array,GEO_TUN_modules-1
    xWall=0
    *do,nthWall,1,GEO_TUN_modules-1,1
        beamCS=CS_BASE_iwall+(2*nthWall-1)
        colCS=CS_BASE_iwall+(2*nthWall)

        xWall=xWall+GEO_TUN_effW
        csys,CS_Tunnel
        clocal,beamCS,cart,xWall,0,0,,,-90
        csys,beamCS
        clocal,colCS,cart,0,0,0,90

        CS_IWALL_beams(nthWall)=beamCS
        CS_IWALL_columns(nthWall)=colCS
    *enddo
    csys,0
*endif


!    ! Optional: create auxiliary coordinate systems offset from the origin
!    !           (done during debugging to visually inspect if directions are correct)
!    CSYS,          CS_top
!    CLOCAL,    CS_top+100, CART, -Eff_GalleryWidth/2,  GEO_TUN_length/2, Eff_GalleryHeight, 0, 0, 0
!    CSYS,          CS_bot
!    CLOCAL,    CS_bot+100, CART,  Eff_GalleryWidth/2,  GEO_TUN_length/2,                 0, 0, 0, 0
!    CSYS,         CS_left
!    CLOCAL,   CS_left+100, CART, -Eff_GalleryHeight/2, GEO_TUN_length/2,                 0, 0, 0, 0
!    CSYS,        CS_right
!    CLOCAL,  CS_right+100, CART,  Eff_GalleryHeight/2, GEO_TUN_length/2,  Eff_GalleryWidth, 0, 0, 0
!    CSYS,       CS_tunnel
!    CLOCAL, CS_tunnel+100, CART,  Eff_GalleryWidth/2,               0,                 0, 0, 0, 0
!    CSYS,0



!!
!! 2.10 SECTIONS
!!
! Soil springs
R,REAL_normSprings,SpringArea,0,-1

! Frictional soil springs
R,REAL_longSprings,SpringArea/20,0,0

! Torsional roof slab springs
R,REAL_roofSprings,-1,FEM_ROOF_negKRot,0,0,1,FEM_ROOF_posKRot

! Rigid struts to vertically connect approach and roof slabs one way
R,REAL_rigidStrut,REAL_rigidStrut_A,0,-1


! Tunnel left wall
SECTYPE,SEC_LWALL,SHELL,,'LWALL'
SECDATA,GEO_OWALL_thk,1
!SECOFFSET,BOT

! Tunnel right wall
SECTYPE,SEC_RWALL,SHELL,,'RWALL'
SECDATA,GEO_OWALL_thk,1
!SECOFFSET,TOP

! Tunnel inner walls
SECTYPE,SEC_IWALL,SHELL,,'IWALL'
SECDATA,GEO_IWALL_thk,1

! Tunnel floor slab
SECTYPE,SEC_FLOOR,SHELL,,'FLOOR'
SECDATA,GEO_FLOOR_thk,1
!SECOFFSET,BOT

! Tunnel ceiling slab
SECTYPE,SEC_ROOF,SHELL,,'ROOF'
SECDATA,GEO_ROOF_thk,1
!SECOFFSET,TOP

*if,GEO_APR_status,eq,1,then
    sectype,SEC_APR,shell,,'APR'
    secdata,GEO_APR_thk,MAT_CONC
*endif

! Top beam (inner walls)
sectype,SEC_tBeam,shell,,'TBEAM'
secdata,GEO_IWALL_topBeamWidth,MAT_CONC

! Bottom beam (inner walls)
sectype,SEC_bBeam,shell,,'BBEAM'
secdata,GEO_IWALL_botBeamWidth,MAT_CONC

! Columns (inner walls)
sectype,SEC_columns,shell,,'COLS'
secdata,GEO_IWALL_columnThk,MAT_CONC

*if,GEO_PILE_status,eq,1,then
    ! Piles (external walls)
    sectype,SEC_pileExt,beam,csolid,'PILEEXT'
    secdata,GEO_PILE_EXT_diameter/2

    ! Piles (external walls)
    sectype,SEC_pileInt,beam,csolid,'PILEINT'
    secdata,GEO_PILE_INT_diameter/2
*endif

*if,GEO_CORB_status,GE,1,THEN
    !TUNNEL_V1_SECCORBEL, namePrefix, corbelParallel, corbelOrtho,  baseThk, orthoThk,           corbelLen,           base_SEC,           base_CS,  dir

    ! Top slab, left side corbels
    TUNNEL_V1_SECCORBEL,       'TL_',    GEO_CORB_width, GEO_CORB_height,  GEO_ROOF_thk,  GEO_OWALL_thk,  GEO_corbelXOff_TOP,   SEC_ROOF_LCORBEL, CS_BASE_corbelTop,  'X'

    ! Top slab, right side corbels
    TUNNEL_V1_SECCORBEL,       'TR_',    GEO_CORB_width, GEO_CORB_height,  GEO_ROOF_thk,  GEO_OWALL_thk, -GEO_corbelXOff_TOP,   SEC_ROOF_RCORBEL, CS_BASE_corbelTop,  'X'

    ! Bottom slab, left side corbels
    TUNNEL_V1_SECCORBEL,       'BL_',    GEO_CORB_width, GEO_CORB_height, GEO_FLOOR_thk,  GEO_OWALL_thk,  GEO_corbelXOff_BOT,  SEC_FLOOR_LCORBEL, CS_BASE_corbelBot,  'X'

    ! Bottom slab, right side corbels
    TUNNEL_V1_SECCORBEL,       'BR_',    GEO_CORB_width, GEO_CORB_height, GEO_FLOOR_thk,  GEO_OWALL_thk, -GEO_corbelXOff_BOT,  SEC_FLOOR_RCORBEL, CS_BASE_corbelBot,  'X'

    ! Walls, bottom corbels
    TUNNEL_V1_SECCORBEL,       'WB_',    GEO_CORB_height, GEO_CORB_width,  GEO_OWALL_thk, GEO_FLOOR_thk,  GEO_corbelYOff_BOT,   SEC_WALL_BCORBEL, CS_BASE_corbelBot,  'Y'

    ! Walls, top corbels
    TUNNEL_V1_SECCORBEL,       'WT_',    GEO_CORB_height, GEO_CORB_width,  GEO_OWALL_thk,  GEO_ROOF_thk, -GEO_corbelYOff_BOT,   SEC_WALL_TCORBEL, CS_BASE_corbelTop,  'Y'

*endif


!!
!! 2.11 HEADWALL
!!
*get,parType,PARM,GEO_HDW_status,TYPE
*if,parType,EQ,0,AND,GEO_HDW_status,GT,0,THEN
    TUNNEL_V1_HDWATTR
*endif
!
!
!
!!
!! 2.12 REFACTORING CALCULATED
!!
MAT_CONC_Poisson   = Poisson
MAT_CONC_dens      = MassDensity
GEO_TUN_epsThk     = EPSThk

MAT_CONC_TSeqvDens = TopSlab_EqvMassDensity

MAT_WATER_dens     = WaterDensity
MAT_WATER_satIncr  = SaturationIncrement

MAT_SOIL_E         = SpringElasticModulus

FEM_SPR_normLength = SpringLength
FEM_SPR_longLength = LongitSpringLength

LOAD_g             = Gravity

SOLU_nsubst        = SubstepCount

LOAD_minSoilCover  = MinimumSoilCover

MAT_CONC_E         = ElasticModulus

FEM_SPR_kLink      = SpringConstant
FEM_SPR_area       = SpringArea

MAT_SOIL_ka        = ActiveEPCoefficient
MAT_SOIL_k0        = RestEPCoefficient

!GEO_TUN_effW       = Eff_GalleryWidth
!GEO_TUN_effH       = Eff_GalleryHeight

GEO_TUN_totEffW    = GEO_TUN_effW*GEO_TUN_modules

GEO_TUN_slopeDeg   = 180*atan(GEO_TUN_slope/100)/PI
GEO_TUN_slopeRad   = GEO_TUN_slopeDeg*PI/180
















