!!
!!
!! 2. ATTRIBUTES
!!
!!
/prep7

! Code version
Version=4

!!
!! 2.0 REFACTORING INPUTS
!!
FILE_name          = GalleryIndex

GEO_TUN_length     = GalleryLength
GEO_TUN_modules    = GalleryModules
GEO_TUN_width      = GalleryWidth
GEO_TUN_height     = GalleryHeight

GEO_TUN_slope      = Tunneli
GEO_TUN_roofThk    = RoofThk
GEO_TUN_floorThk   = FloorThk
GEO_TUN_wallThk    = WallThk
GEO_TUN_depth      = GalleryDepth

GEO_EMB_thetai     = GalleryThetai
GEO_EMB_thetaf     = GalleryThetaf
GEO_EMB_waterDepth = WaterDepth

GEO_HDW_stffWidth  = InternalWidth
GEO_HDW_soilAngle  = BackfillAngle

MAT_CONC_fck  = fck
MAT_SOIL_k    = SoilStiffness
MAT_SOIL_phi  = FrictionAngle
MAT_SOIL_c    = SoilCohesion
MAT_SOIL_dens = SoilDensity

LOAD_skew     = LineDirection
LOAD_dist     = DeltaZOffset
LOAD_impact   = ImpactCoefficient
LOAD_posCount = xOffsetCount
LOAD_zoff     = zOffset
*del,LOAD_pos
*dim,LOAD_pos,ARRAY,LOAD_posCount
*vfun,LOAD_pos,COPY,xOffsets

FEM_TUN_esize = ElementSize
!
!
!
!!
!! 2.1 CONSTANTS
!!
pi=ACOS(-1)

! Concrete Poisson's coefficient
Poisson=0.2
! Concrete mass density
MassDensity=2500

! Corrected mass density of top slab (accounting for EPS layer)
*get,parType,PARM,EPSThk,TYPE
*if,parType,NE,0,THEN
    EPSThk=0
*endif
TopSlab_EqvMassDensity=2500*(RoofThk-EPSThk)/RoofThk

! Water mass density
WaterDensity=1000
! Mass density increment for saturated soils
SaturationIncrement=100

! Soil springs: elastic modulus
SpringElasticModulus=1e9
! Soil springs: length
SpringLength=1
LongitSpringLength=SpringLength*(SoilStiffness/100e6)
COMPARE,'LongitSpringLength','MIN',2,LongitSpringLength,SpringLength

! Gravitational acceleration
Gravity=9.81

! Number of substeps
SubstepCount=20

! Minimum soil cover (smaller depths mean loads are applied directly on top slab)
MinimumSoilCover=1.4



!!
!! 2.2 ATTRIBUTE NUMBERS
!!
! Coordinate systems
CoordSys=11
CS_top=12
CS_bot=13
CS_left=14
CS_right=15
CS_tunnel=16
CS_RevTunnel=17
!CS_corbel_base=1000
CS_BASE_corbelBot=1000
CS_BASE_corbelTop=2000

! Cross-sections
SEC_ROOF=1
SEC_FLOOR=2
SEC_LWALL=3
SEC_RWALL=4
SEC_IWALL=5
SEC_APR=6
SEC_ROOF_LCORBEL=400
SEC_ROOF_RCORBEL=500
SEC_FLOOR_LCORBEL=600
SEC_FLOOR_RCORBEL=700
SEC_WALL_BCORBEL=800
SEC_WALL_TCORBEL=900

! Materials
MAT_CONC=1
MAT_SOIL=2
MAT_CONCTS=3

! Element types
TYPE_SHELL181=1
TYPE_LINK180=2

! Real constants
REAL_normSprings=1
REAL_longSprings=2


!!
!! 2.3 GEOMETRY
!!
! Calculate effective spans (distance between mid-planes)
Eff_GalleryWidth=GalleryWidth+WallThk
Eff_GalleryHeight=GalleryHeight+(FloorThk+RoofThk)/2

*if,GEO_RetMode,EQ,1,THEN
    !!GEO_InletAngle=90
    *afun,DEG
    GEO_ExtraLength=TAN(GEO_InletAngle)*Eff_GalleryWidth
    *afun,RAD
    GalleryLength=GalleryLength+2*GEO_ExtraLength
*endif

! Tunnel slope (in degrees)
TunnelSlope=ATAN(Tunneli/100)*180/pi

! Traffic/track direction (in radians)
LineAngle=LineDirection*pi/180

! Area of shell elements
ElementArea=ElementSize**2

! Water level (global cartesian coordinate)
*if,WaterDepth,GE,0,THEN
    WaterY=GalleryDepth-WaterDepth+Eff_GalleryHeight
    WaterHeight=Eff_GalleryHeight+GalleryDepth-WaterDepth
*else
    WaterY=0
    WaterHeight=0
*endif
*if,Waterheight,GT,Eff_GalleryHeight,THEN
    WaterHeight=Eff_GalleryHeight
*endif

! Angle of soil slopes along the tunnel's longitudinal direction
*get,parType,PARM,GalleryThetai,TYPE
*if,parType,NE,0,THEN
    GalleryAlphai=0
*else
    GalleryAlphai=90-GalleryThetai
*endif
*get,parType,PARM,GalleryThetaf,TYPE
*if,parType,NE,0,THEN
    GalleryAlphaf=0
*else
    GalleryAlphaf=90-GalleryThetaf
*endif

! Calculate corbel offsets
roof_xProjection=(RoofThk/2)*(GEO_corbelW/GEO_corbelH)
roof_yProjection=(WallThk/2)*(GEO_corbelH/GEO_corbelW)
GEO_corbelXOff_TOP=GEO_corbelW+(WallThk/2)+roof_xProjection
GEO_corbelYOff_TOP=GEO_corbelH+(RoofThk/2)+roof_yProjection

floor_xProjection=(FloorThk/2)*(GEO_corbelH/GEO_corbelW)
floor_yProjection=(WallThk/2)*(GEO_corbelH/GEO_corbelW)
GEO_corbelXOff_BOT=GEO_corbelW+(WallThk/2)+floor_xProjection
GEO_corbelYOff_BOT=GEO_corbelH+(FloorThk/2)+floor_yProjection

*if,GEO_APR_status,EQ,1,THEN
    *afun,DEG

    GEO_APR_zAxis=LOAD_zoff+((LOAD_lineCount-1)*LOAD_dist)/2
    GEO_APR_zAxW=tan(LOAD_skew)*(Eff_GalleryWidth*GEO_TUN_modules)/2
    GEO_APR_zS=GEO_APR_width/(2*cos(LOAD_skew))
    GEO_APR_zL=GEO_APR_length*tan(LOAD_skew)

    GEO_APR_z1 = GEO_APR_zAxis - GEO_APR_zAxW - GEO_APR_zS
    GEO_APR_z2 = GEO_APR_zAxis - GEO_APR_zAxW + GEO_APR_zS
    GEO_APR_z3 = GEO_APR_zAxis + GEO_APR_zAxW - GEO_APR_zS
    GEO_APR_z4 = GEO_APR_zAxis + GEO_APR_zAxW + GEO_APR_zS

    GEO_APR_z1L = GEO_APR_z1 - GEO_APR_zL
    GEO_APR_z2L = GEO_APR_z2 - GEO_APR_zL
    GEO_APR_z3L = GEO_APR_z3 + GEO_APR_zL
    GEO_APR_z4L = GEO_APR_z4 + GEO_APR_zL

    *afun,RAD
*endif





!!
!! 2.4 MATERIALS
!!
! Concrete's elastic modulus
ElasticModulus=4760*SQRT(fck*1e-6)*1e6

! Soil spring stiffness
SpringConstant=SoilStiffness*ElementArea
SpringArea=SpringConstant*SpringLength/SpringElasticModulus

! Active Earth Pressure Coeficient (Ka)
ActiveEPCoefficient=TAN((45-(FrictionAngle/2))*pi/180)**2
! Rest Earth Pressure Coefficient (K0)
RestEPCoefficient=1-SIN(FrictionAngle*pi/180)



!!
!! 2.5 LOADS
!!
! Specific weight: water
Gammaw=WaterDensity*Gravity
! Specific weight: dry soil
Gammat=SoilDensity*Gravity
! Specific weight: saturated soil
GammaSAT=Gammat+(SaturationIncrement*Gravity)
! Specific weight: submerged soil
GammaSUB=GammaSAT-Gammaw

! Tensão vertical devido à camada de cobrimento
*if,WaterDepth,GE,0,AND,WaterDepth,LT,GalleryDepth,THEN
    SoilPressure=Gammat*WaterDepth+GammaSAT*(GalleryDepth-WaterDepth)
*else
    SoilPressure=Gammat*GalleryDepth
*endif
NodalSoilLoad=SoilPressure*ElementArea

! Buoyancy load on floor slab
Buoyancy=WaterHeight*Gammaw
BuoyancyLoad=Buoyancy*ElementArea

! LOADTRAIN, LTname, repetitions, offset, impactCoef, udlLen
ltCenteringOffset=0!Eff_GalleryWidth/2
LOADTRAIN, LOAD_LTName,,ltCenteringOffset,ImpactCoefficient, 20
LOAD_LTPtCount=LOADTRAIN_VAR_count

! Z coordinate of each railway line
*del,zOffsets
*dim,zOffsets,ARRAY,LOAD_lineCount
zOff=zOffset
*do,nthLine,1,LOAD_lineCount,1
    zOffsets(nthLine)=zOff
    zOff=zOff+DeltaZOffset
*enddo

! Z coordinate of point where tunnel axis intersects railway axis (pivot point)
LOAD_z0=LOAD_zoff+((LOAD_lineCount-1)*LOAD_dist)/2




!!
!! 2.4 ELEMENT TYPES
!!
! Tunnel walls/slabs
ET,TYPE_SHELL181,181
! Soil springs
ET,TYPE_LINK180,180



!!
!! 2.5 MATERIALS
!!
! Concrete
MP , EX   , MAT_CONC,ElasticModulus
MP , PRXY , MAT_CONC,Poisson
MP , DENS , MAT_CONC,MassDensity
MP , ALPX , MAT_CONC,1.3e-5

! Soil
MP , EX   , MAT_SOIL,SpringElasticModulus
MP , PRXY , MAT_SOIL,Poisson

! Concrete: top slab with equivalent mass density
MP , EX   , MAT_CONCTS,ElasticModulus
MP , PRXY , MAT_CONCTS,Poisson
MP , DENS , MAT_CONCTS,TopSlab_EqvMassDensity
MP , ALPX , MAT_CONCTS,1.3e-5



!!
!! 2.6 COORDINATE SYSTEMS
!!
! Global cartesian
CLOCAL,CoordSys,CART,0,0,0,0,0,0
CSYS,0

!! 2.6.1 LOCAL SYSTEMS
!!
! ! Top slab
CLOCAL,   CS_top, CART,  0,  0,  0,    0, -90-TunnelSlope,    0
CLOCAL,   CS_top, CART,  0,  0,  0, -180,               0,    0
CSYS,0
! Bottom slab
CLOCAL,   CS_bot, CART,  0,  0,  0,    0,  90-TunnelSlope,    0
CSYS,0
! Left wall
CLOCAL,  CS_left, CART,  0,  0,  0,    0,    -TunnelSlope,    0
CLOCAL,  CS_left, CART,  0,  0,  0,    0,               0,  -90
CLOCAL,  CS_left, CART,  0,  0,  0,  -90,               0,    0
CSYS,0
! Right wall (also used for inner walls)
CLOCAL, CS_right, CART,  0,  0,  0,    0,    -TunnelSlope,    0
CLOCAL, CS_right, CART,  0,  0,  0,    0,               0,   90
CLOCAL, CS_right, CART,  0,  0,  0,   90,               0,    0
CSYS,0
! Tunnel
CLOCAL,CS_tunnel, CART,  0,  0,  0,    0,    -TunnelSlope,    0
CLOCAL,CS_RevTunnel, CART,Eff_GalleryWidth,0,GalleryLength
CLOCAL,CS_RevTunnel, CART, 0, 0, 0,,,180
CSYS,0

! Corbel coordinate systems
xWall=0
*do,nthWall,1,GalleryModules+1,1
    nthCS=CS_BASE_corbelBot+nthWall
    CSYS,CS_Tunnel
    CLOCAL,nthCS,CART,xWall,0,0,0,0,0

    mthCS=CS_BASE_corbelTop+nthWall
    CSYS,CS_Tunnel
    CLOCAL,mthCS,CART,xWall,Eff_GalleryHeight,0,0,0,0

    xWall=xWall+Eff_GalleryWidth
*enddo
CSYS,0


!    ! Optional: create auxiliary coordinate systems offset from the origin
!    !           (done during debugging to visually inspect if directions are correct)
!    CSYS,          CS_top
!    CLOCAL,    CS_top+100, CART, -Eff_GalleryWidth/2,  GalleryLength/2, Eff_GalleryHeight, 0, 0, 0
!    CSYS,          CS_bot
!    CLOCAL,    CS_bot+100, CART,  Eff_GalleryWidth/2,  GalleryLength/2,                 0, 0, 0, 0
!    CSYS,         CS_left
!    CLOCAL,   CS_left+100, CART, -Eff_GalleryHeight/2, GalleryLength/2,                 0, 0, 0, 0
!    CSYS,        CS_right
!    CLOCAL,  CS_right+100, CART,  Eff_GalleryHeight/2, GalleryLength/2,  Eff_GalleryWidth, 0, 0, 0
!    CSYS,       CS_tunnel
!    CLOCAL, CS_tunnel+100, CART,  Eff_GalleryWidth/2,               0,                 0, 0, 0, 0
!    CSYS,0



!!
!! 2.7 SECTIONS
!!
! Soil springs
R,REAL_normSprings,SpringArea,0,-1

! Frictional soil springs
R,REAL_longSprings,SpringArea/45,0,0

! Tunnel left wall
SECTYPE,SEC_LWALL,SHELL,,'LWALL'
SECDATA,WallThk,1
!SECOFFSET,BOT

! Tunnel right wall
SECTYPE,SEC_RWALL,SHELL,,'RWALL'
SECDATA,WallThk,1
!SECOFFSET,TOP

! Tunnel inner walls
SECTYPE,SEC_IWALL,SHELL,,'IWALL'
SECDATA,WallThk,1

! Tunnel floor slab
SECTYPE,SEC_FLOOR,SHELL,,'FLOOR'
SECDATA,FloorThk,1
!SECOFFSET,BOT

! Tunnel ceiling slab
SECTYPE,SEC_ROOF,SHELL,,'ROOF'
SECDATA,RoofThk,1
!SECOFFSET,TOP

*if,GEO_APR_status,eq,1,then
    sectype,SEC_APR,shell,,'APR'
    secdata,GEO_APR_thk,MAT_CONC
*endif

*if,GEO_corbel,GE,1,THEN
    !TUNNEL_V0_SECCORBEL, namePrefix, corbelParallel, corbelOrtho,  baseThk, orthoThk,           corbelLen,           base_SEC,           base_CS,  dir

    ! Top slab, left side corbels
    TUNNEL_V0_SECCORBEL,       'TL_',    GEO_corbelW, GEO_corbelH,  RoofThk,  WallThk,  GEO_corbelXOff_TOP,   SEC_ROOF_LCORBEL, CS_BASE_corbelTop,  'X'

    ! Top slab, right side corbels
    TUNNEL_V0_SECCORBEL,       'TR_',    GEO_corbelW, GEO_corbelH,  RoofThk,  WallThk, -GEO_corbelXOff_TOP,   SEC_ROOF_RCORBEL, CS_BASE_corbelTop,  'X'

    ! Bottom slab, left side corbels
    TUNNEL_V0_SECCORBEL,       'BL_',    GEO_corbelW, GEO_corbelH, FloorThk,  WallThk,  GEO_corbelXOff_BOT,  SEC_FLOOR_LCORBEL, CS_BASE_corbelBot,  'X'

    ! Bottom slab, right side corbels
    TUNNEL_V0_SECCORBEL,       'BR_',    GEO_corbelW, GEO_corbelH, FloorThk,  WallThk, -GEO_corbelXOff_BOT,  SEC_FLOOR_RCORBEL, CS_BASE_corbelBot,  'X'

    ! Walls, bottom corbels
    TUNNEL_V0_SECCORBEL,       'WB_',    GEO_corbelH, GEO_corbelW,  WallThk, FloorThk,  GEO_corbelYOff_BOT,   SEC_WALL_BCORBEL, CS_BASE_corbelBot,  'Y'

    ! Walls, top corbels
    TUNNEL_V0_SECCORBEL,       'WT_',    GEO_corbelH, GEO_corbelW,  WallThk,  RoofThk, -GEO_corbelYOff_BOT,   SEC_WALL_TCORBEL, CS_BASE_corbelTop,  'Y'
*endif


!!
!! 2.8 HEADWALL
!!
*get,parType,PARM,GEO_Headwall,TYPE
*if,parType,EQ,0,AND,GEO_Headwall,GT,0,THEN
    TUNNEL_V0_HDWATTR
*endif
!
!
!
!!
!! 2.9 REFACTORING CALCULATED
!!
MAT_CONC_Poisson   = Poisson
MAT_CONC_dens      = MassDensity
GEO_TUN_epsThk     = EPSThk

MAT_CONC_TSeqvDens = TopSlab_EqvMassDensity

MAT_WATER_dens     = WaterDensity
MAT_WATER_satIncr  = SaturationIncrement

MAT_SOIL_E         = SpringElasticModulus

FEM_SPR_normLength = SpringLength
FEM_SPR_longLength = LongitSpringLength

LOAD_g             = Gravity

SOLU_nsubst        = SubstepCount

LOAD_minSoilCover  = MinimumSoilCover

MAT_CONC_E         = ElasticModulus

FEM_SPR_kLink      = SpringConstant
FEM_SPR_area       = SpringArea

MAT_SOIL_ka        = ActiveEPCoefficient
MAT_SOIL_k0        = RestEPCoefficient

GEO_TUN_effW       = Eff_GalleryWidth
GEO_TUN_effH       = Eff_GalleryHeight

GEO_TUN_totEffW    = GEO_TUN_effW*GEO_TUN_modules

LOAD_skewRad       = LineAngle
