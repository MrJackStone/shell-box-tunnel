!!                                                                                                !!
!! 3.  Solid model                                                                                !!
!!                                                                                                !!

! Exported selection components:
! Area components:
!    COMPA_Tunnel
!    COMPA_Floor
!    COMPA_Roof
!    COMPA_Walls
!    COMPA_LeftWall
!    COMPA_RightWall
!    COMPA_InnerWalls
!    COMPA_ROOF_leftCorbel
!    COMPA_ROOF_rightCorbel
!    COMPA_ROOF_flat
!    COMPA_FLOOR_leftCorbel
!    COMPA_FLOOR_rightCorbel
!    COMPA_FLOOR_flat
!    COMPA_WALL_topCorbel
!    COMPA_WALL_botCorbel
!    COMPA_WALL_flat
!    COMPA_bBeam
!    COMPA_tBeam
!    COMPA_Columns
!    COMPA_HDW_1
!    COMPA_HDW_2
! Line components:
!    COMPL_Tunnel
!    COMPL_Embankment
!    COMPL_Railway
! Keypoint components:
!    COMPK_Tunnel

/prep7

/view,1,1,2,3
/angle,1
/auto,1

seltol,1e-8

! Activate cartesian coordinate to account for tunnel slope
csys,CS_Tunnel

!!                                                                                                !!
!! 3.1  Tunnel                                                                                    !!
!!                                                                                                !!

!! 3.1.1  Draw areas                                                                              !!
! First wall
xVal=0

KCounter=1
KP1=KCounter
KP2=KCounter+1
KP3=KCounter+2
KP4=KCounter+3
KCounter=KP4+1
KTopBeginning=KP4

K,KP1,xVal,0,0
K,KP2,xVal,0,GEO_TUN_length
K,KP3,xVal,Eff_GalleryHeight,GEO_TUN_length
K,KP4,xVal,Eff_GalleryHeight,0

LSEL,U,LINE,,ALL
L,KP1,KP2
*get,L1,LINE,0,NUM,MAX
L,KP2,KP3
*get,L2,LINE,0,NUM,MAX
L,KP3,KP4
*get,L3,LINE,0,NUM,MAX
L,KP4,KP1
*get,L4,LINE,0,NUM,MAX

AL,L1,L2,L3,L4

allsel

! Inner walls, floors, and ceilings
*do,GalleryModuleIndex,1,GEO_TUN_modules,1

  KPA=KP(xVal,0,0)
  KPB=KP(xVal,0,GEO_TUN_length)
  KPC=KP(xVal,Eff_GalleryHeight,GEO_TUN_length)
  KPD=KP(xVal,Eff_GalleryHeight,0)

  KSEL,S,KP,,KPA
  KSEL,A,KP,,KPB
  KSEL,A,KP,,KPC
  KSEL,A,KP,,KPD
  CM,LastKeypoints,KP

  xVal=xVal+Eff_GalleryWidth

  KP1=KCounter
  KP2=KCounter+1
  KP3=KCounter+2
  KP4=KCounter+3
  KCounter=KP4+1

  KSEL,U,KP,,ALL
  K,KP1,xVal,0,0
  K,KP2,xVal,0,GEO_TUN_length
  K,KP3,xVal,Eff_GalleryHeight,GEO_TUN_length
  K,KP4,xVal,Eff_GalleryHeight,0
  CM,NewKeypoints,KP

  LSEL,U,LINE,,ALL
  L,KP1,KP2
  *get,L1,LINE,0,NUM,MAX
  L,KP2,KP3
  *get,L2,LINE,0,NUM,MAX
  L,KP3,KP4
  *get,L3,LINE,0,NUM,MAX
  L,KP4,KP1
  *get,L4,LINE,0,NUM,MAX
  CM,NewLines,LINE

  AL,L1,L2,L3,L4

  CMSEL,S,LastKeypoints
  LSLK,S,1
  CM,LastLines,LINE

  LSEL,R,LOC,Y,0
  *get,LA,LINE,0,NUM,MIN
  CMSEL,S,LastLines
  LSEL,R,LOC,Z,GEO_TUN_length
  *get,LB,LINE,0,NUM,MIN
  CMSEL,S,LastLines
  LSEL,R,LOC,Y,Eff_GalleryHeight
  *get,LC,LINE,0,NUM,MIN
  CMSEL,S,LastLines
  LSEL,R,LOC,Z,0
  *get,LD,LINE,0,NUM,MIN

  CMSEL,S,NewKeypoints
  CMSEL,A,LastKeypoints

  LSEL,U,LINE,,ALL
  L,KP1,KPA
  *get,L5,LINE,0,NUM,MAX
  L,KP2,KPB
  *get,L6,LINE,0,NUM,MAX
  L,KP3,KPC
  *get,L7,LINE,0,NUM,MAX
  L,KP4,KPD
  *get,L8,LINE,0,NUM,MAX
  CM,TransLines,LINE

  CMSEL,S,NewLines
  CMSEL,A,LastLines
  CMSEL,A,TransLines

  AL,LA,L6,L1,L5
  AL,L3,L7,LC,L8

*enddo


!! 3.1.2  Oblique cut at tunnel ends                                                              !!
*if,GEO_HDW_type,EQ,1,AND,GEO_HDW_angle,NE,0,THEN

  *get,CSMax,CDSY,,NUM,MAX
  tmpCS=CSMax+1000

  ALLSEL
  wpcsys,1,CS_Tunnel
  WPROTA,,,-GEO_HDW_angle
  ASBW,ALL,,DELETE

  CSWPLA,tmpCS,CART
  ASEL,U,LOC,Z,0,1E3*GEO_TUN_length
  ADELE,ALL,,,1

  ALLSEL
  WPCSYS,1,CS_Tunnel
  WPOFFS,Eff_GalleryWidth,,GEO_TUN_length
  WPROTA,,,-GEO_HDW_angle
  ASBW,ALL,,DELETE

  CSWPLA,tmpCS,CART
  ASEL,S,LOC,Z,0,1E3*GEO_TUN_length
  ADELE,ALL,,,1

  allsel
  WPCSYS,1,CS_Tunnel
  CSYS,CS_Tunnel

*endif


!! 3.1.3  Slice at approach slabs                                                                  !!
*if,GEO_APR_status,eq,1,then
  csslicexy,GEO_APR_z1
  csslicexy,GEO_APR_z2
  csslicexy,GEO_APR_z3
  csslicexy,GEO_APR_z4
*endif


!! 3.1.4  Slice roof gap                                                                          !!
*if,GEO_ROOF_gapStatus,eq,1,then
  *do,nthGap,1,GEO_ROOF_gapCount,1
    zBeg = GEO_ROOF_gap_z_begs(nthGap)
    zEnd = GEO_ROOF_gap_z_ends(nthGap)

    allsel
    csslicexy,zBeg
    csslicexy,zEnd
    asel,s,loc,z,zBeg,zEnd
    asel,r,loc,y,GEO_TUN_effH
    adele,all,,,1
  *enddo
*endif


!! 3.1.5  Create components                                                                        !!
TUNNEL_V2_BUILDCM


!! 3.1.6  Slice at precast girders                                                                !!
*if,GEO_ROOF_type,eq,1,then
  cmsel,s,COMPA_Tunnel
  cmsel,u,COMPA_Roof
  *do,nthSlice,1,GEO_girderCount-1,1
    z=GEO_girderZ(nthSlice)
    csslicexy,z
  *enddo

  cmsel,s,COMPA_Roof
  lsla,s
  ksll,s
  wpcsys,,CS_Tunnel
  *do,nthSlice,1,GEO_girderCount-1,1
    z=GEO_girderZ(nthSlice)
    wpoffs,,,z
    asbw,all,sepo,delete
    wpoffs,,,-z
  *enddo

  ! Rebuild named selection components
  TUNNEL_V2_BUILDCM

*endif


!!                                                                                                !!
!! 3.2  Split wings                                                                               !!
!!                                                                                                !!
*if,GEO_HDW_type,EQ,1,AND,GEO_HDW_wingBottomOffset,GT,0,THEN

  ! Walls
  CMSEL,S,COMPA_Walls
  CSSLICEXZ,GEO_HDW_wingBottomOffset
  CM,COMPA_walls,AREA

  CMSEL,S,COMPA_walls
  ASEL,R,LOC,X,0
  CM,COMPA_LeftWall,AREA

  CMSEL,S,COMPA_walls
  ASEL,R,LOC,X,Eff_GalleryWidth
  CM,COMPA_RightWall,AREA

  CMSEL,S,COMPA_walls
  CMSEL,U,COMPA_LeftWall
  CMSEL,U,COMPA_RightWall
  CM,COMPA_InnerWalls,AREA

  cmsel,s,COMPA_tunnel
  cmsel,a,COMPA_walls
  cm,COMPA_tunnel,area

*endif
ALLSEL


!!                                                                                                !!
!! 3.3  Headwalls                                                                                 !!
!!                                                                                                !!
*get,parType,parm,GEO_HDW_status,type

*if,parType,EQ,0,AND,GEO_HDW_status,GT,0,THEN

  cmsel,s,COMPA_Floor
  cssliceyz,GEO_HDW_stiffXOff
  cssliceyz,GEO_TUN_totEffW-GEO_HDW_stiffXOff
  cm,COMPA_Floor,area

  /color,cm,lgra,COMPA_Floor
  cmsel,s,COMPA_tunnel
  cmsel,a,COMPA_floor
  cm,COMPA_Tunnel,area
  allsel

  TUNNEL_V2_HDWSM , CS_Tunnel    , CS_HDW_LeftWallEnd , CS_HDW_RightWallEnd
  TUNNEL_V2_HDWSM , CS_RevTunnel , CS_HDW_LeftWallBeg , CS_HDW_RightWallBeg

  cmsel,s,COMPA_Headwalls
  lsla,s
  ksll,s
  nummrg,kp
  csys,CS_Tunnel

*endif
allsel

! Build inlet selection components
TUNNEL_V2_HDWBUILDCM


!!                                                                                                !!
!! 3.4  Split corbels                                                                             !!
!!                                                                                                !!
TUNNEL_V2_SMCORBEL


!!                                                                                                !!
!! 3.5  Approach slabs                                                                            !!
!!                                                                                                !!
TUNNEL_V2_SMAPPSLAB


!!                                                                                                !!
!! 3.6  Build roof girder components                                                              !!
!!                                                                                                !!
*if,GEO_ROOF_type,eq,1,then
  zi=0
  *do,nthGirder,1,GEO_girderCount-1,1
    zf=GEO_girderZ(nthGirder)
    cmsel,s,COMPA_Roof
    asel,r,loc,z,zi,zf
    compName=STRCAT('COMPA_RG',CHRVAL(nthGirder))
    cm,%compName%,area
    zi=zf
  *enddo
  cmsel,s,COMPA_Roof
  asel,r,loc,z,zi,GEO_TUN_Length
  compName=STRCAT('COMPA_RG',CHRVAL(GEO_girderCount))
  cm,%compName%,area
  allsel
*endif


!!                                                                                                !!
!! 3.7  Pin roof to walls                                                                         !!
!!                                                                                                !!
*if,GEO_ROOF_wallConnection,eq,1,then

  *if,GEO_ROOF_type,eq,0,then
    TUNNEL_V2_SMCOPY, 'COMPA_roof'

  *elseif,GEO_ROOF_type,eq,1,then
    *do,nthGirder,1,GEO_girderCount,1
      compName = STRCAT('COMPA_RG',CHRVAL(nthGirder))
      TUNNEL_V2_SMCOPY, compName
      cmsel,s,COMPA_Roof
      cmsel,a,%compName%
      cm,COMPA_Roof,area
    *enddo
  *endif

  *if,GEO_ROOF_gapStatus,eq,1,then
    TUNNEL_V2_SMCOPY, 'COMPA_struts'
  *endif

  cmsel,s,COMPA_Tunnel
  cmsel,a,COMPA_roof
  cmsel,a,COMPA_struts
  cm,COMPA_Tunnel,area
*endif


!!                                                                                                !!
!! 3.8  Open inner walls                                                                          !!
!!                                                                                                !!
*if,GEO_TUN_modules,gt,1,and,GEO_IWALL_type,eq,1,then
  csys,CS_Tunnel

  *do,nthWall,1,GEO_IWALL_count,1
    wallX = GEO_IWALL_x_coords(nthWall)
    cmsel,s,COMPA_InnerWalls
    asel,r,loc,x,wallX
    lsla,s
    ksll,s
    cm,COMPA_temp,area

    k_1 = kp(wallX , 0            , 0)
    k_2 = kp(wallX , 0            , GEO_TUN_length)
    k_3 = kp(wallX , GEO_TUN_effH , 0)
    kwplan,1,k_1,k_2,k_3

    *do,nthOp,1,GEO_IWALL_columnCount-1,1
      xOp = GEO_TUN_ozCenter(nthOp)
      asel,u,area,,all
      blc5,xOp,GEO_TUN_oyCenter,GEO_TUN_opW,GEO_TUN_opH
      *get,aOP,area,,num,min
      cmsel,s,COMPA_temp
      asel,a,area,,aOP
      asba,COMPA_temp,aOP,,delete,delete
      cm,COMPA_temp,area
    *enddo

    cmsel,s,COMPA_temp
    safe_cmsel,'a','COMPA_InnerWalls'
    cm,COMPA_InnerWalls,area
  *enddo

  cmsel,s,COMPA_InnerWalls
  lsla,s
  ksll,s
  csslicexz,GEO_IWALL_botBeamHeight
  csslicexz,GEO_TUN_effH-GEO_IWALL_topBeamHeight
  nummrg,kp
  cm,COMPA_InnerWalls,area
  cmsel,a,COMPA_Walls,area
  cm,COMPA_Walls,area

  cmsel,s,COMPA_InnerWalls
  asel,r,loc,y,0,GEO_IWALL_botBeamHeight
  cm,COMPA_bBeam,area
  cmsel,s,COMPA_InnerWalls
  asel,r,loc,y,GEO_TUN_effH-GEO_IWALL_topBeamHeight,GEO_TUN_effH
  cm,COMPA_tBeam,area
  cmsel,s,COMPA_InnerWalls
  cmsel,u,COMPA_bBeam
  cmsel,u,COMPA_tBeam
  cm,COMPA_Columns,area
  TUNNEL_V2_BUILDCM
*endif


!!                                                                                                !!
!! 3.9  Piles                                                                                     !!
!!                                                                                                !!
*if,GEO_PILE_status,eq,1,then

  lsel,u,line,,all
  ksel,u,kp,,all
  cm,COMPK_pileTop,kp
  cm,COMPK_pileBot,kp
  cm,COMPL_pileExt,line
  cm,COMPL_pileInt,line

  deltaZ=GEO_TUN_length/(GEO_PILE_EXT_count-1)
  lsel,u,line,,all
  *do,extWall,1,2,1

    xWall = (extWall-1)*GEO_TUN_totEffW
    z     = 0

    *do,nthPile,1,GEO_PILE_EXT_count,1
      *get,KMX,kp,,num,maxd
      K_top = KMX+1
      K_bot = KMX+2
      k,K_top,xWall,0,z
      csys,0
      x = kx(K_top)
      y = ky(K_top)
      z = kz(K_top)
      k,K_bot,x,y-GEO_PILE_length,z
      csys,CS_Tunnel
      l,K_top,K_bot

      ksel,s,kp,,K_top
      cmsel,a,COMPK_pileTop
      cm,COMPK_pileTop,kp

      ksel,s,kp,,K_bot
      cmsel,a,COMPK_pileBot
      cm,COMPK_pileBot,kp

      z = z+deltaZ
    *enddo
  *enddo
  cm,COMPL_pileExt,line

  *if,GEO_TUN_modules,gt,1,then
    lsel,u,line,,all
    deltaZ = GEO_TUN_length/(GEO_PILE_INT_count-1)
    *do,innWall,1,GEO_TUN_modules-1,1
      xWall = innWall*GEO_TUN_effW
      z     = 0

      *do,nthPile,1,GEO_PILE_EXT_count,1
        *get,KMX,kp,,num,maxd
        K_top = KMX+1
        K_bot = KMX+2
        k,K_top,xWall,0,z
        csys,0
        x = kx(K_top)
        y = ky(K_top)
        z = kz(K_top)
        k,K_bot,x,y-GEO_PILE_length,z
        csys,CS_Tunnel
        l,K_top,K_bot

        ksel,s,kp,,K_top
        cmsel,a,COMPK_pileTop
        cm,COMPK_pileTop,kp

        ksel,s,kp,,K_bot
        cmsel,a,COMPK_pileBot
        cm,COMPK_pileBot,kp

        z = z+deltaZ
      *enddo
    *enddo
    cm,COMPL_pileInt,line
  *endif

  *if,GEO_HDW_status,eq,1,then
    cmsel,s,COMPA_HDW_Footing
    lsla,s
    cmsel,s,COMPA_HDW_walls
    lsla,r
    ksll,s
    cm,COMPL_ref,line
    cm,COMPK_ref,kp
    lnum=0
    *get,lc,line,,count
    *do,nthLine,1,lc,1
      cmsel,s,COMPL_ref
      lnum = lsnext(lnum)
      *get,llen,line,lnum,leng
      pileCount = nint(0.5+(llen/(GEO_TUN_length/GEO_PILE_EXT_count)))
      ldiv,lnum,,,pileCount+1,1
      cmsel,u,COMPK_ref
      cmsel,u,COMPL_ref
      ldele,all,,,0
      cm,COMPK_temp,kp
      *get,kc,kp,,count
      kpnum = 0
      *do,nthKP,1,kc,1
        cmsel,s,COMPK_temp
        kpnum = kpnext(kpnum)
        csys,0
        *get,kmxd,kp,,num,maxd
        K_bot = kmxd+1
        k,K_bot,kx(kpnum),ky(kpnum)-GEO_PILE_length,kz(kpnum)
        lsel,u,line,,all
        l,kpnum,K_bot
        cmsel,a,COMPL_pileExt
        cm,COMPL_pileExt,line
        csys,CS_Tunnel
        cmsel,s,COMPK_pileBot
        ksel,a,kp,,K_bot
        cm,COMPK_pileBot
        cmsel,s,COMPK_pileTop
        ksel,a,kp,,kpnum
        cm,COMPK_pileTop
      *enddo
    *enddo
  *endif

  cmsel,s,COMPL_pileExt
  cmsel,a,COMPL_pileInt
  cm,COMPL_piles,line
  ksll,s
  cm,COMPK_piles,kp
*endif


!!                                                                                                !!
!! 3.10  Area direction                                                                           !!
!!                                                                                                !!
CMSEL,S,COMPA_Floor
ARYORI,-1
CMSEL,S,COMPA_Roof
cmsel,a,COMPA_struts
cmsel,a,COMPA_approach
ARYORI,1
CMSEL,S,COMPA_LeftWall
ARXORI,-1
CMSEL,S,COMPA_RightWall
CMSEL,A,COMPA_InnerWalls
ARXORI,1

CMSEL,S,COMPA_HDW_Stiffener
CMSEL,A,COMPA_HDW_Slab
CMSEL,A,COMPA_HDW_Footing
ARYORI,-1
CMSEL,S,COMPA_HDW_LeftWall
ARXORI,-1
CMSEL,S,COMPA_HDW_RightWall
ARXORI,1
!CMSEL,S,COMPA_HDW_TopBeam
!COMPA_HDW_BotBeam
!COMPA_HDW_BackBeam

ALLSEL


!!                                                                                                !!
!! 3.11  Embankment                                                                               !!
!!                                                                                                !!
! NOTE: embankment is drawn for display purposes only.
CSYS,CS_Tunnel

! Get reference location for cover soil representation
KSEL,S,LOC,Z,GEO_TUN_length
KSEL,R,LOC,Y,Eff_GalleryHeight
*get,KRef,KP,,NUM,MIN

! Draw embankment contour in global cartesian CS
CSYS,0
yREF = KY(KRef)
zREF = KZ(KRef)

! Calculate vertex location for embankment keypoints
*afun,DEG
xPT          = GEO_TUN_totEffW/2
yPT1         = COS(TunnelSlope)*(Eff_GalleryHeight+(GEO_ROOF_thk/2))
yPT2         = yPT1+GEO_EMB_height
zPT1         = -SIN(TunnelSlope)*(Eff_GalleryHeight+(GEO_ROOF_thk/2))
zPT2         = zPT1+(GEO_EMB_height/TAN(GEO_EMB_slopeBeg))
yPT3         = yPT2
yPT4         = yREF+COS(TunnelSlope)*(GEO_ROOF_thk/2)
depthFromEnd = yPT2-yPT4
zPT4         = zREF-SIN(TunnelSlope)*(GEO_ROOF_thk/2)
zPT3         = zPT4-(depthFromEnd/TAN(GEO_EMB_slopeEnd))
*afun,RAD

! Draw embankment contour
LSEL,U,LINE,,ALL
*get,KPMax,KP,,NUM,MAXD
KPT1 = KPMax+1
KPT2 = KPMax+2
KPT3 = KPMax+3
KPT4 = KPMax+4
K , KPT1 , xPT  , yPT1 , zPT1
K , KPT2 , xPT  , yPT2 , zPT2
K , KPT3 , xPT  , yPT3 , zPT3
K , KPT4 , xPT  , yPT4 , zPT4
L , KPT1 , KPT2
L , KPT2 , KPT3
L , KPT3 , KPT4

! Create component
CM,COMPL_Embankment,LINE
/color,CM,WHIT,COMPL_Embankment


!!                                                                                                !!
!! 3.12  Railway lines                                                                            !!
!!                                                                                                !!
! NOTE: railwaylines (indicated as arrows) are drawn for display purposes only.

! Draw arrows marking each railway position
lsel,none
*do,nthRailway,1,LOAD_LTA_count,1

  zRailway = LOAD_LTA_offsets(nthRailway)

  *do,nthLoad,1,2,1

    gaugeOff = (-1**nthLoad)*LOAD_LTA_gauge

    *get,KPMax,KP,,NUM,MAXD
    KPRi = KPMax+1
    KPRj = KPMax+2
    KPRk = KPMax+3
    KPRl = KPMax+4
    K , KPRi , xPT  , yPT2     , zRailway+gaugeOff
    K , KPRj , xPT  , yPT2+2   , zRailway+gaugeOff
    K , KPRk , xPT  , yPT2+0.5 , zRailway-0.3+gaugeOff
    K , KPRl , xPT  , yPT2+0.5 , zRailway+0.3+gaugeOff
    L , KPRi , KPRj
    L , KPRi , KPRk
    L , KPRi , KPRl

  *enddo
*enddo

! Create component
CM,COMPL_Railway,LINE
/color,CM,RED,COMPL_Railway


!!                                                                                                !!
!! 3.13  Capture images                                                                           !!
!!                                                                                                !!
/color , CM , DGRA , COMPA_Walls
/color , CM , LGRA , COMPA_Floor
/color , CM , LGRA , COMPA_Roof
/color , cm , lgra , COMPA_struts
/color , CM , 14   , COMPA_Headwalls
/color , cm , oran , COMPA_approach
/color , cm , gree , COMPA_Headwalls

! Tunnel
ALLSEL
CMSEL,S,COMPA_Tunnel
CMSEL,S,COMPL_Tunnel
CMSEL,S,COMPK_Tunnel
/view,1,1,2,3
/angle,1
/auto,1
GPLOT
/graphics,FULL
TAKEPIC,'SM_Tunnel'

! Capture schematic side view (shows railway lines and embankment contour)
ALLSEL
KSEL,U,KP,,ALL
/view,1,-1,0,0
/pnum,AREA,1
/number,1
GPLOT
TAKEPIC,'SM_Schematic',800
GPLOT

! Capture top view
allsel
/view,1,0,1,0
/auto,1
aplot
takepic,'SM_top',800
