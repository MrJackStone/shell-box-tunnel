!!                                                                                                !!
!! 3.  Solid model                                                                                !!
!!                                                                                                !!

! Exported selection components:
! Area components:
!    COMPA_Tunnel
!    COMPA_Floor
!    COMPA_Roof
!    COMPA_Walls
!    COMPA_LeftWall
!    COMPA_RightWall
!    COMPA_InnerWalls
!    COMPA_ROOF_leftCorbel
!    COMPA_ROOF_rightCorbel
!    COMPA_ROOF_flat
!    COMPA_FLOOR_leftCorbel
!    COMPA_FLOOR_rightCorbel
!    COMPA_FLOOR_flat
!    COMPA_WALL_topCorbel
!    COMPA_WALL_botCorbel
!    COMPA_WALL_flat
!    COMPA_bBeam
!    COMPA_tBeam
!    COMPA_Columns
!    COMPA_HDW_1
!    COMPA_HDW_2
! Line components:
!    COMPL_Tunnel
!    COMPL_Embankment
!    COMPL_Railway
! Keypoint components:
!    COMPK_Tunnel

/prep7

/view,1,1,2,3
/angle,1
/auto,1

seltol,1e-8

! Activate cartesian coordinate to account for tunnel slope
csys,CS_Tunnel

!!                                                                                                !!
!! 3.1  Tunnel                                                                                    !!
!!                                                                                                !!

!! 3.1.0  Initialize selection components                                                         !!
asel,none
cm , COMPA_Tunnel     , area
cm , COMPA_Floor      , area
cm , COMPA_Roof       , area
cm , COMPA_Walls      , area
cm , COMPA_LeftWall   , area
cm , COMPA_RightWall  , area
cm , COMPA_InnerWalls , area
cm , COMPA_bBeam      , area
cm , COMPA_tBeam      , area
cm , COMPA_Columns    , area

lsel,none
cm , COMPL_Tunnel     , line
cm , COMPL_Embankment , line
cm , COMPL_Railway    , line

ksel,none
cm , COMPK_Tunnel , kp

!! 3.1.1  Draw tunnel faces                                                                       !!
! Floor
asel,none
csys,CS_floor
wpcsys,-1
blc4,0,0,GEO_TUN_totEffW,GEO_TUN_length
cm,COMPA_floor,area

! Roof
asel,none
csys,CS_roof
wpcsys,-1
blc4,0,0,GEO_TUN_totEffW,GEO_TUN_length
cm,COMPA_roof,area

! Left wall
asel,none
csys,CS_leftWall
wpcsys,-1
blc4,0,0,GEO_TUN_effH,GEO_TUN_length
cm,COMPA_leftWall,area

! Right wall
asel,none
csys,CS_rightWall
wpcsys,-1
blc4,0,0,GEO_TUN_effH,GEO_TUN_length
cm,COMPA_rightWall,area

! Inner walls
asel,none
*do,nthIwall,1,GEO_IWALL_count,1
  csys,CS_innerWall%nthIwall%
  wpcsys,-1
  blc4,0,0,GEO_TUN_effH,GEO_TUN_length
*enddo
cm,COMPA_innerWalls,area

! TODO  connect inner walls & roof/floor (L2ACNT)
!       different inlets for each side
!       oblique for any type of inlet
!       remove wall slicing to match roof when using precast slabs (L2ACNT)


!! 3.1.2  Oblique cut at tunnel ends                                                              !!
*if,GEO_TUN_skewness,gt,0,then
  *del , end_cs ,  , nopr
  *dim , end_cs ,  , 2
  end_cs(1) = CS_begSkewed,CS_endSkewed
  *do,nthEnd,1,2,1
    nthCS = end_cs(nthEnd)
    csys,nthCS
    wpcsys,-1
    cswpla,CS_dummy,cart

    TUNNEL_V2_SMSLICECM, 'COMPA_roof'
    TUNNEL_V2_SMSLICECM, 'COMPA_floor'
    TUNNEL_V2_SMSLICECM, 'COMPA_leftWall'
    TUNNEL_V2_SMSLICECM, 'COMPA_rightWall'
  *enddo
*endif


!! 3.1.3  Slice roof gap                                                                          !!
*if,GEO_ROOF_gapStatus,eq,1,then
  *do,nthGap,1,GEO_ROOF_gapCount,1
    zBeg = GEO_ROOF_gap_z_begs(nthGap)
    zEnd = GEO_ROOF_gap_z_ends(nthGap)

    cmsel,s,COMPA_roof
    csslicexy,zBeg
    csslicexy,zEnd
    cm,COMPA_roof,area
    asel,r,loc,z,zBeg,zEnd
    adele,all,,,1
  *enddo
*endif


!! 3.1.5  Create components                                                                        !!
TUNNEL_V2_BUILDCM


!! 3.1.6  Slice at precast girders                                                                !!
*if,GEO_ROOF_type,eq,1,then
  csys,CS_tunnel
  cmsel,s,COMPA_roof
  lsla
  ksll
  *do,nthSlice,1,GEO_girderCount-1,1
    z = GEO_girderZ(nthSlice)
    wpcsys,-1
    wpoffs,,,z
    asbw,all,,delete
  *enddo
  cm,COMPA_roof,area
*endif


!!                                                                                                !!
!! 3.2  Split wings                                                                               !!
!!                                                                                                !!
*if,GEO_HDW_type,EQ,1,AND,GEO_HDW_wingBottomOffset,GT,0,THEN
  cmsel,s,COMPA_Walls
  csslicexz,GEO_HDW_wingBottomOffset
  TUNNEL_V2_BUILDCM
*endif


!!                                                                                                !!
!! 3.3  Headwalls                                                                                 !!
!!                                                                                                !!
TUNNEL_V2_HDWINITCM

*get,parType,parm,GEO_HDW_status,type

*if,parType,eq,0,and,GEO_HDW_status,gt,0,then

  cmsel,s,COMPA_Floor
  cssliceyz,GEO_HDW_stiffXOff
  cssliceyz,GEO_TUN_totEffW-GEO_HDW_stiffXOff
  cm,COMPA_Floor,area

  /color,cm,lgra,COMPA_Floor
  cmsel,s,COMPA_tunnel
  cmsel,a,COMPA_floor
  cm,COMPA_Tunnel,area
  allsel

  TUNNEL_V2_HDWSM , CS_Tunnel    , CS_HDW_LeftWallEnd , CS_HDW_RightWallEnd
  TUNNEL_V2_HDWSM , CS_RevTunnel , CS_HDW_LeftWallBeg , CS_HDW_RightWallBeg

  cmsel,s,COMPA_Headwalls
  lsla,s
  ksll,s
  nummrg,kp
  csys,CS_Tunnel

*endif
allsel

! Build inlet selection components
TUNNEL_V2_HDWBUILDCM


!!                                                                                                !!
!! 3.4  Split corbels                                                                             !!
!!                                                                                                !!
asel,none
cm , COMPA_ROOF_leftCorbel   , area
cm , COMPA_ROOF_rightCorbel  , area
cm , COMPA_ROOF_flat         , area
cm , COMPA_FLOOR_leftCorbel  , area
cm , COMPA_FLOOR_rightCorbel , area
cm , COMPA_FLOOR_flat        , area
cm , COMPA_WALL_topCorbel    , area
cm , COMPA_WALL_botCorbel    , area
cm , COMPA_WALL_flat         , area

*if,GEO_CORB_status,ge,1,then
  TUNNEL_V2_SMCORBEL
*endif


!!                                                                                                !!
!! 3.5  Approach slabs                                                                            !!
!!                                                                                                !!
asel,none
cm,COMPA_approach,area

*if,GEO_APR_status,eq,1,then
  TUNNEL_V2_SMAPPSLAB
*endif


!!                                                                                                !!
!! 3.6  Pin roof to walls                                                                         !!
!!                                                                                                !!
*if,GEO_ROOF_wallConnection,eq,1,then

  *if,GEO_ROOF_type,eq,0,then
    TUNNEL_V2_SMCOPY, 'COMPA_roof'

  *elseif,GEO_ROOF_type,eq,1,then
    *do,nthGirder,1,GEO_girderCount,1
      compName = STRCAT('COMPA_RG',CHRVAL(nthGirder))
      TUNNEL_V2_SMCOPY, compName
      cmsel,s,COMPA_Roof
      cmsel,a,%compName%
      cm,COMPA_Roof,area
    *enddo
  *endif

  *if,GEO_ROOF_gapStatus,eq,1,then
    TUNNEL_V2_SMCOPY, 'COMPA_struts'
  *endif

  cmsel,s,COMPA_Tunnel
  cmsel,a,COMPA_roof
  cmsel,a,COMPA_struts
  cm,COMPA_Tunnel,area
*endif


!!                                                                                                !!
!! 3.7  Open inner walls                                                                          !!
!!                                                                                                !!
TUNNEL_V2_SMIWALL


!!                                                                                                !!
!! 3.8  Piles                                                                                     !!
!!                                                                                                !!
*if,GEO_PILE_status,eq,1,then
  TUNNEL_V2_SMPILES
*endif


!!                                                                                                !!
!! 3.9  Area direction                                                                            !!
!!                                                                                                !!
cmsel , s , COMPA_Floor
aryori,-1

cmsel , s , COMPA_Roof
cmsel , a , COMPA_struts
cmsel , a , COMPA_approach
aryori,1

cmsel , s , COMPA_LeftWall
arxori,-1

cmsel , s , COMPA_RightWall
cmsel , a , COMPA_InnerWalls
arxori,1

cmsel , s , COMPA_HDW_Stiffener
cmsel , a , COMPA_HDW_Slab
cmsel , a , COMPA_HDW_Footing
aryori,-1

cmsel , s , COMPA_HDW_LeftWall
arxori,-1

cmsel , s , COMPA_HDW_RightWall
arxori,1

!cmsel,S,COMPA_HDW_TopBeam
!compa_HDW_BotBeam
!compa_HDW_BackBeam

allsel


!!                                                                                                !!
!! 3.10  Embankment                                                                               !!
!!                                                                                                !!
! NOTE: embankment is drawn for display purposes only.
CSYS,CS_Tunnel

! Get reference location for cover soil representation
KSEL,S,LOC,Z,GEO_TUN_length
KSEL,R,LOC,Y,Eff_GalleryHeight
*get,KRef,KP,,NUM,MIN

! Draw embankment contour in global cartesian CS
CSYS,0
yREF = KY(KRef)
zREF = KZ(KRef)

! Calculate vertex location for embankment keypoints
*afun,DEG
xPT          = GEO_TUN_totEffW/2
yPT1         = COS(TunnelSlope)*(Eff_GalleryHeight+(GEO_ROOF_thk/2))
yPT2         = yPT1+GEO_EMB_height
zPT1         = -SIN(TunnelSlope)*(Eff_GalleryHeight+(GEO_ROOF_thk/2))
zPT2         = zPT1+(GEO_EMB_height/TAN(GEO_EMB_slopeBeg))
yPT3         = yPT2
yPT4         = yREF+COS(TunnelSlope)*(GEO_ROOF_thk/2)
depthFromEnd = yPT2-yPT4
zPT4         = zREF-SIN(TunnelSlope)*(GEO_ROOF_thk/2)
zPT3         = zPT4-(depthFromEnd/TAN(GEO_EMB_slopeEnd))
*afun,RAD

! Draw embankment contour
lsel,none
*get,KPMax,KP,,NUM,MAXD
KPT1 = KPMax+1
KPT2 = KPMax+2
KPT3 = KPMax+3
KPT4 = KPMax+4
K , KPT1 , xPT  , yPT1 , zPT1
K , KPT2 , xPT  , yPT2 , zPT2
K , KPT3 , xPT  , yPT3 , zPT3
K , KPT4 , xPT  , yPT4 , zPT4
L , KPT1 , KPT2
L , KPT2 , KPT3
L , KPT3 , KPT4

! Create component
CM,COMPL_Embankment,LINE
/color,CM,WHIT,COMPL_Embankment


!!                                                                                                !!
!! 3.11  Railway lines                                                                            !!
!!                                                                                                !!
! NOTE: railwaylines (indicated as arrows) are drawn for display purposes only.

! Draw arrows marking each railway position
lsel,none
*do,nthRailway,1,LOAD_LTA_count,1

  zRailway = LOAD_LTA_offsets(nthRailway)

  *do,nthLoad,1,2,1

    gaugeOff = (-1**nthLoad)*LOAD_LTA_gauge

    *get,KPMax,KP,,NUM,MAXD
    KPRi = KPMax+1
    KPRj = KPMax+2
    KPRk = KPMax+3
    KPRl = KPMax+4
    K , KPRi , xPT  , yPT2     , zRailway+gaugeOff
    K , KPRj , xPT  , yPT2+2   , zRailway+gaugeOff
    K , KPRk , xPT  , yPT2+0.5 , zRailway-0.3+gaugeOff
    K , KPRl , xPT  , yPT2+0.5 , zRailway+0.3+gaugeOff
    L , KPRi , KPRj
    L , KPRi , KPRk
    L , KPRi , KPRl

  *enddo
*enddo

! Create component
CM,COMPL_Railway,LINE
/color,CM,RED,COMPL_Railway


!!                                                                                                !!
!! 3.12  Capture images                                                                           !!
!!                                                                                                !!
/color , CM , DGRA , COMPA_Walls
/color , CM , LGRA , COMPA_Floor
/color , CM , LGRA , COMPA_Roof
/color , cm , lgra , COMPA_struts
/color , CM , 14   , COMPA_Headwalls
/color , cm , oran , COMPA_approach
/color , cm , gree , COMPA_Headwalls

! Tunnel
ALLSEL
CMSEL,S,COMPA_Tunnel
CMSEL,S,COMPL_Tunnel
CMSEL,S,COMPK_Tunnel
/view,1,1,2,3
/angle,1
/auto,1
GPLOT
/graphics,FULL
TAKEPIC,'SM_Tunnel'

! Capture schematic side view (shows railway lines and embankment contour)
ALLSEL
ksel,none
/view,1,-1,0,0
/pnum,AREA,1
/number,1
GPLOT
TAKEPIC,'SM_Schematic',800
GPLOT

! Capture top view
allsel
/view,1,0,1,0
/auto,1
aplot
takepic,'SM_top',800
