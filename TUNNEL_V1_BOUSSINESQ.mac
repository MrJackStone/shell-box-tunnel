! TUNNEL_V1_BOUSSINESQ

/nopr
/prep7

lsel,u,line,,all
QX_0=GEO_TUN_totEffW/2
QZ_0=LOAD_z0

*get,NodeCount,NODE,0,COUNT

*do,nthLine,1,LOAD_LTA_count,1

    *do,nthPointLoad,1,LOAD_LTPtCount,1

        LoadValue=LOADTRAIN_ARR_loads(nthPointLoad)
        LoadPosition=LOADTRAIN_ARR_positions(nthPointLoad)

        QX_i=LoadPosition+xOffset
        QY=Eff_GalleryHeight+GEO_EMB_height
        QZ_i=zOffsets(nthLine)
        TUNNEL_V1_LTPOS, QX_i, QZ_i, QX_0, QZ_0, -LOAD_LTA_skewRad, 1

        *if,GEO_EMB_height,LT,MinimumSoilCover,THEN

            APPLY_LOAD = 0

            *if,QX,GE,0,AND,QX,LE,GEO_TUN_modules*Eff_GalleryWidth,THEN
                ! CASE: load over tunnel
                *if,QZ,GE,0,AND,QZ,LE,GEO_TUN_length,THEN
                    APPLY_LOAD = 1
                *endif

            *else
                ! CASE: load over approach slab
                *if,GEO_APR_status,eq,1,then
                    *if,QX,ge,0-GEO_APR_length,and,QX,lt,0,then
                        APPLY_LOAD = 1
                    *elseif,QX,gt,GEO_TUN_totEffW,and,QX,le,GEO_TUN_totEffW+GEO_APR_length,then
                        APPLY_LOAD = 1
                    *endif
                *endif
            *endif

            *if,APPLY_LOAD,eq,1,then
                !ClosestNode=NODE(QX,QY,QZ)
                !F,ClosestNode,FY,-ABS(LoadValue)
                LeftTrackNode=NODE(QX,QY,QZ-(LOAD_gauge/2))
                RightTrackNode=NODE(QX,QY,QZ+(LOAD_gauge/2))
                F,LeftTrackNode,FY,-ABS(LoadValue/2)
                F,RightTrackNode,FY,-ABS(LoadValue/2)
            *endif

        *else

            *del,ARRN_Loaded
            *dim,ARRN_Loaded,ARRAY,NodeCount
            *del,ARRFY_Load
            *dim,ARRFY_Load,ARRAY,NodeCount

            nthNode=0
            *do,NodeIndex,1,NodeCount,1

                nthNode=NDNEXT(nthNode)

                NX=NX(nthNode)
                NY=NY(nthNode)
                NZ=NZ(nthNode)

                esln,s,0
                esel,r,type,,TYPE_SHELL181
                apportionedArea=arnode(nthNode)

                RadialDistance=SQRT(((NX-QX)**2)+((NZ-QZ)**2))
                RelativeDepth=QY-NY

                BoussinesqLoad=-3*LoadValue/(2*pi*(RelativeDepth**2)*((1+(RadialDistance/RelativeDepth)**2)**(5/2)))
                AdditionalLoad=BoussinesqLoad*apportionedArea

                ARRN_Loaded(NodeIndex)=nthNode
                ARRFY_Load(NodeIndex)=AdditionalLoad
                !F,nthNode,FY,AdditionalLoad

            *enddo

            ! Aply loads
            F,ARRN_Loaded(1:NodeCount),FY,ARRFY_Load(1:NodeCount)

        *endif

    *enddo

*enddo

compName=strcat('LTx_',chrval(xOffIndex))
cm,%compName%,line

*del,vcolors
*dim,vcolors,array,4
vcolors(1)=12, 1, 2, 3

cnum=mod(xOffIndex,4)+1
/color,cm,cnum,%compName%

cmsel,a,COMPL_ltpos
cm,COMPL_ltpos,line

/solu
/gopr

