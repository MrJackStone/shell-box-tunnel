! TUNNEL_V2_WRRES


/post1

ALLSEL
ESEL,S,TYPE,,1
NSLE,S

SET,1,LAST

! Components with reference nodes for deflection calculations
CSYS,CS_Tunnel
NSEL,S,LOC,X,0
x=0
*do,nthModule,1,GEO_TUN_modules,1
  x=x+GEO_TUN_effW
  nsel,a,loc,x,x
*enddo
cm,COMPN_references,node
CM,COMPN_temp,NODE
NSEL,S,LOC,Y,GEO_TUN_effH
NSEL,A,LOC,Y,0
CMSEL,R,COMPN_temp
ESEL,S,TYPE,,TYPE_SHELL181
NSLE,R
CM,COMPN_temp,NODE
CMSEL,S,COMPN_temp
NSEL,R,LOC,X,0
CM,COMPN_DEFLECT_leftRef,NODE
CMSEL,S,COMPN_temp
NSEL,R,LOC,X,GEO_TUN_totEffW
CM,COMPN_DEFLECT_rightRef,NODE

CMSEL,S,COMPN_DEFLECT_leftRef
CMSEL,A,COMPN_DEFLECT_rightRef
NSEL,R,LOC,Y,Eff_GalleryHeight
CM,COMPN_DEFLECT_topRef,NODE
CMSEL,S,COMPN_DEFLECT_leftRef
CMSEL,A,COMPN_DEFLECT_rightRef
NSEL,R,LOC,Y,0
CM,COMPN_DEFLECT_botRef,NODE

CSYS,0

! Base element tables
ETABLE , 'MX' , SMISC , 5
ETABLE , 'QX' , SMISC , 7
ETABLE , 'NX' , SMISC , 1
ETABLE , 'MY' , SMISC , 4
ETABLE , 'QY' , SMISC , 8
ETABLE , 'NY' , SMISC , 2
ETABLE , 'UX' , U     , X
ETABLE , 'UY' , U     , Y

! Element tables: dead weight load step
SMAX , 'DW_MX' , 'MX'
SMAX , 'DW_QX' , 'QX'
SMAX , 'DW_NX' , 'NX'
SMAX , 'DW_MY' , 'MY'
SMAX , 'DW_QY' , 'QY'
SMAX , 'DW_NY' , 'NY'
SMAX , 'DW_UX' , 'UX'
SMAX , 'DW_UY' , 'UY'

! Element tables: dead weight + load train load steps
*del,ETNames
*dim,ETNames,CHAR,8
ETNames(1) = 'MX', 'MY', 'NX', 'NY', 'QX', 'QY', 'UX', 'UY'
ETENV,2,LoadStepCount,'ETNames'

! Element tables: soil pressures on floor slabs
sadd , 'DW_SIGY'  , 'DW_UY'  ,  , -MAT_SOIL_stiffness*1E-3
sadd , 'EMN_SIGY' , 'EMN_UY' ,  , -MAT_SOIL_stiffness*1E-3

*del,LSOptions
*dim,LSOptions,CHAR,2
LSOptions(1) = 'DW', 'ENV'

sectCount  = 8
deltaZSect = (GEO_TUN_length-GEO_ExtraLength)/(sectCount-1)


*cfopen,'RES_SECT',txt
  *vwrite,
  ('--------',\b)
  *vwrite,
  ('    --------------------------------------------ROOF',\b)
  *vwrite,
  ('    -------------------------------------------FLOOR',\b)
  *vwrite,
  ('    -------------------------------------------WALLS',\b)
  *vwrite,
  ('    ----------------------------------SOIL')


  *vwrite,
  ('--------',\b)
  *vwrite,
  ('    --------------ENDS  ----SPAN  ------------------',\b)
  *vwrite,
  ('    --------------ENDS  ----SPAN  ------------------',\b)
  *vwrite,
  ('    --------------ENDS  ----SPAN  ------------------',\b)
  *vwrite,
  ('    --------------PRES  --------SETTLEMENT')


  *vwrite,
  ('       Z',\b)
  *vwrite,
  ('           M         V         M         N         d',\b)
  *vwrite,
  ('           M         V         M         N         d',\b)
  *vwrite,
  ('           M         V         M         N         d',\b)
  *vwrite,
  ('         AVG       MAX       TOP       BOT')

*cfclos

*cfopen,'RES_LONG',txt
  *vwrite,
  ('--------    ---------------------------------------COBERTURA    -------------------------------------------FUNDO    -----------------------------------------PAREDES')
  *vwrite,
  ('--------    ------------MÍNIMO  ----------------------MÁXIMO    ------------MÍNIMO  ----------------------MÁXIMO    ------------MÍNIMO  ----------------------MÁXIMO')
  *vwrite,
  ('       Z           M         N         M         V         N           M         N         M         V         N           M         N         M         V         N')
*cfclos

!/window,1,OFF
/view,1,1,1,1

CMSEL,S,COMPA_Roof
NSLA,S,1
NDLeftBeginning = NODE(0,Eff_GalleryHeight,0)
NDRightEnd      = NODE(Eff_GalleryWidth,Eff_GalleryHeight,GEO_TUN_length)

*do,nthSect,1,sectCount-1,1

  *msg,UI,nthSect,sectCount-1
SECTION: %I / %I

  zSect_b = (nthSect-1)*deltaZSect
  zSect_e = zSect_b+deltaZSect

  zMid = (GEO_ExtraLength/2)+(zSect_b+zSect_e)/2

  zSect_bR = zSect_b+GEO_ExtraLength
  zSect_eR = zSect_e+GEO_ExtraLength

  CSYS,CS_Tunnel
  *if,GEO_HDW_type,EQ,1,THEN
    TUNNEL_V2_OBLQSECT
    /view,1,0,1,0
    /auto
    /dist,1,1.1
  *else
    NSEL,S,LOC,Z,zSect_b,zSect_e
  *endif
  CMSEL,S,COMPA_Tunnel
  NSLA,R,1

  ESLN,S,0
  ESLA,R
  CM,COMPE_Section,ELEM
  CSYS,0

  *do,nthLSType,1,2,1
    LSKey=LSOptions(nthLSType)

    !! Cross-sectional results                                                                !!
    *cfopen,'RES_SECT',TXT,,APPEND

      *vwrite,zMid
      (F8.2,'    ',\b)

      !! Roof slab                                                                          !!
      CMSEL,S,COMPA_Roof
      ESLA,S
      CMSEL,R,COMPE_Section
      NSLE,S
      TUNNEL_V2_SECRES,LSKey,0
      *vwrite, MSup/1000, VSup/1000, MSpan/1000, NSpan/1000, DFL*1000
      (F8.2,'  ',F8.2,'  ',F8.2,'  ',F8.2,'  ',F8.2,'    ',\b)

      !! Floor slab                                                                         !!
      CMSEL,S,COMPA_Floor
      ESLA,S
      CMSEL,R,COMPE_Section
      NSLE,S
      TUNNEL_V2_SECRES,LSKey,0
      *vwrite, MSup/1000, VSup/1000, MSpan/1000, NSpan/1000, DFL*1000
      (F8.2,'  ',F8.2,'  ',F8.2,'  ',F8.2,'  ',F8.2,'    ',\b)

      !! Walls                                                                              !!

      !! Left wall                                                                          !!
      CMSEL,S,COMPA_LeftWall
      ESLA,S
      CMSEL,R,COMPE_Section
      NSLE,S
      TUNNEL_V2_SECRES,LSKey,1
      LW_MSup  = MSup
      LW_VSup  = VSup
      LW_MSpan = MSpan
      LW_NSpan = NSpan
      LW_DFL   = DFL

      !! Right wall                                                                         !!
      CMSEL,S,COMPA_RightWall
      ESLA,S
      CMSEL,R,COMPE_Section
      NSLE,S
      TUNNEL_V2_SECRES,LSKey,1
      RW_MSup  = MSup
      RW_VSup  = VSup
      RW_MSpan = MSpan
      RW_NSpan = NSpan
      RW_DFL   = DFL

      !! Maximum values  TODO: remove macro                                                 !!
      MSup  = (LW_MSup>RW_MSup)
      MSpan = (LW_MSpan<RW_MSpan)
      VSup  = (LW_VSup>RW_VSup)
      NSpan = (LW_NSpan<RW_NSpan)
      DFL   = (LW_DFL>RW_DFL)
      *vwrite, MSup/1000, VSup/1000, MSpan/1000, NSpan/1000, DFL*1000
      (F8.2,'  ',F8.2,'  ',F8.2,'  ',F8.2,'  ',F8.2)

      !! Soil                                                                               !!
      CMSEL,S,COMPA_Floor
      !CMSEL,S,COMPA_Roof
      ESLA,S
      CMSEL,R,COMPE_Section
      NSLE,S
      TUNNEL_V2_SURFRES,LSKey,0
      !*vwrite, MSup/1000, VSup/1000, MSpan/1000, NSpan/1000, DFL*1000
      !(F8.2,'  ',F8.2,'  ',F8.2,'  ',F8.2,'  ',F8.2,'    ',\b)

    *cfclos

    !! Longitudinal results                                                                   !!
    *cfopen,'RES_LONG',txt,,APPEND

      *vwrite,zMid
      (F8.2,'    ',\b)

      !! Roof slab                                                                          !!
      CMSEL,S,COMPA_Roof
      ESLA,S
      CMSEL,R,COMPE_Section
      NSLE,S
      TUNNEL_V2_LONGRES,LSKey
      *vwrite, Mmin/1000, Nmin/1000, Mmax/1000, VMax/1000, NMax/1000
      (F8.2,'  ',F8.2,'  ',F8.2,'  ',F8.2,'  ',F8.2,'    ',\b)

      !! Floor slab                                                                         !!
      CMSEL,S,COMPA_Floor
      ESLA,S
      CMSEL,R,COMPE_Section
      NSLE,S
      TUNNEL_V2_LONGRES,LSKey
      *vwrite, Mmin/1000, Nmin/1000, Mmax/1000, VMax/1000, NMax/1000
      (F8.2,'  ',F8.2,'  ',F8.2,'  ',F8.2,'  ',F8.2,'    ',\b)

      !! Walls                                                                              !!
      CMSEL,S,COMPA_LeftWall
      CMSEL,A,COMPA_RightWall
      ESLA,S
      CMSEL,R,COMPE_Section
      NSLE,S
      TUNNEL_V2_LONGRES,LSKey
      *vwrite, Mmin/1000, Nmin/1000, Mmax/1000, VMax/1000, NMax/1000
      (F8.2,'  ',F8.2,'  ',F8.2,'  ',F8.2,'  ',F8.2)

    *cfclos

  *enddo
*enddo

/replot
