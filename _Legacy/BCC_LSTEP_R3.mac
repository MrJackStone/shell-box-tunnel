!!
!!
!! 5. LOAD STEPS
!!
!!
LoadStepIndex=0

*del,xOffsets
*dim,xOffsets,ARRAY,2

*do,zOffsetIndex,1,zOffsetCount,1

    *del,zOffsets
    *dim,zOffsets,ARRAY,2

    zOffsets(1)=z1Offsets(zOffsetIndex)
    zOffsets(2)=z1Offsets(zOffsetIndex)+DeltaZOffset

    *do,xOffIndex,1,xOffsetCount,1

        xOffsets(1)=x1Offsets(xOffIndex)
        xOffsets(2)=x2Offsets(xOffIndex)

        LoadStepIndex=LoadStepIndex+1

        MemorialDATA='Galerias-G%GalleryIndex%-MEMORIAL-V%Version%'
        SingleRES='Galerias-G%GalleryIndex%-V%Version%'

        /prep7

        ALLSEL
        FDELE,ALL

        ! Peso próprio dos elementos
        ACEL,,Gravity


        !!
        !! 5.1 CARGAS SOBRE A LAJE SUPERIOR
        !!

        *msg,UI,GalleryIndex,LoadStepIndex
GALLERY # %4I %/&
LOAD STEP %4I %/&
APPLYING LOADS ON ROOF SLAB...

        ! Carga vertical sobre as lajes de cobertura
        NSEL,S,LOC,Y,Eff_GalleryHeight
        NSEL,R,LOC,X,0,Eff_GalleryWidth*GalleryModules
        NSEL,R,LOC,Z,0,GalleryLength

        ! Tensão vertical devido à camada de cobrimento
        F,ALL,FY,-NodalSoilLoad
        ALLSEL

        ! Acréscimo de tensão vertical devido ao trem-tipo (Boussinesq)
        *do,RowIndex,1,RowCount,1

            *do,LoadIndex,1,LoadCount,1

                LoadValue=LoadVector(LoadIndex,RowIndex)
                LoadPosition=PositionVector(LoadIndex,RowIndex)

                xOffset=xOffsets(RowIndex)
                zOffset=zOffsets(RowIndex)

                QX=xOffset+LoadPosition*COS(LineAngle)
                QY=Eff_GalleryHeight+GalleryDepth
                QZ=zOffset+LoadPosition*SIN(LineAngle)

                NSEL,S,LOC,Y,Eff_GalleryHeight
                NSEL,R,LOC,X,0,Eff_GalleryWidth*GalleryModules
                NSEL,R,LOC,Z,0,GalleryLength
                *get,NodeCount,NODE,0,COUNT

                *if,GalleryDepth,LT,MinimumSoilCover,THEN

                    *if,QX,GE,0,AND,QX,LE,GalleryModules*Eff_GalleryWidth,THEN

                        *if,QZ,GE,0,AND,QZ,LE,GalleryLength,THEN

                            ClosestNode=NODE(QX,QY,QZ)
                            *get,ExistentLoad,NODE,ClosestNode,F,FY
                            NewLoad=ExistentLoad+(LoadValue*ImpactCoefficient)
                            F,ClosestNode,FY,NewLoad

                        *endif

                    *endif

                *else

                    *do,NodeIndex,1,NodeCount,1

                        *get,nthNode,NODE,0,NUM,MIN

                        NX=NX(nthNode)
                        NY=NY(nthNode)
                        NZ=NZ(nthNode)

                        RadialDistance=SQRT(((NX-QX)**2)+((NZ-QZ)**2))
                        RelativeDepth=QY-NY

                        *get,ExistentLoad,NODE,nthNode,F,FY

                        BoussinesqLoad=3*LoadValue/(2*pi*(RelativeDepth**2)*((1+(RadialDistance/RelativeDepth)**2)**(5/2)))
                        AdditionalLoad=BoussinesqLoad*ElementArea
                        NewLoad=ExistentLoad+AdditionalLoad

                        F,nthNode,FY,NewLoad

                        NSEL,U,NODE,,nthNode

                    *enddo

                *endif

            *enddo

        *enddo


        !!
        !! 5.2 CARGAS SOBRE A PAREDE ESQUERDA
        !!

        *msg,UI,GalleryIndex,LoadStepIndex
GALLERY # %4I %/&
LOAD STEP %4I %/&
APPLYING LOADS ON LEFT WALL...

        ! Carga horizontal sobre a parede externa esquerda
        NSEL,S,LOC,X,0
        NSEL,R,LOC,Z,0,GalleryLength
        NSEL,R,LOC,Y,0,Eff_GalleryHeight

        *get,NodeCount,NODE,0,COUNT

        *do,NodeIndex,1,NodeCount,1

            *get,nthNode,NODE,0,NUM,MIN

            NX=NX(nthNode)
            NY=NY(nthNode)
            NZ=NZ(nthNode)

            Depth=GalleryDepth+(Eff_GalleryHeight-NY)

            ! Tensão horizontal devido à camada de solo
            *if,WaterY,GT,NY,THEN
                EffectivePressure=Gammat*WaterDepth+(WaterY-NY)*GammaSUB
            *else
                EffectivePressure=Gammat*Depth
            *endif
            HorEffectivePressure=EffectivePressure*RestEPCoefficient-2*SoilCohesion*SQRT(RestEPCoefficient)

            ! Tensão horizontal devido à água
            *if,WaterY,GT,NY,THEN
                WaterPressure=(WaterY-NY)*Gammaw
            *else
                WaterPressure=0
            *endif

            *del,StressIncreases
            *dim,StressIncreases,ARRAY,LoadCount

            *del,AllStressIncreases
            *dim,AllStressIncreases,ARRAY,RowCount

            ! Acréscimo de tensão horizontal devido ao trem-tipo (Boussinesq)
            *do,RowIndex,1,RowCount,1

                *do,LoadIndex,1,LoadCount,1

                    LoadValue=LoadVector(LoadIndex,RowIndex)
                    LoadPosition=PositionVector(LoadIndex,RowIndex)

                    xOffset=xOffsets(RowIndex)
                    zOffset=zOffsets(RowIndex)

                    QX=xOffset+LoadPosition*COS(LineAngle)
                    QY=Eff_GalleryHeight+GalleryDepth
                    QZ=zOffset+LoadPosition*SIN(LineAngle)

                    PerpDistance=ABS(QX-NX)
                    FullDistance=SQRT(((NX-QX)**2)+((NZ-QZ)**2)+((NY-QY)**2))
                    RelativeDepth=QY-NY

                    *if,FullDistance,EQ,0,THEN
                        HorBoussinesqLoad=0
                    *else
                        ! Fórmula do acréscimo de tensão horizontal devido a força concentrada
                        !   Valor muliplicado por 2 (dois) para compensar pela hipótese de semi-espaço infinito
                        !   na situação de repouso.
                        HorBoussinesqLoad=2*(3*LoadValue*(PerpDistance**2)*RelativeDepth/(2*pi*(FullDistance**5)))
                    *endif

                    StressIncreases(LoadIndex)=HorBoussinesqLoad

                *enddo

                *vscfun,RowStressIncrease,SUM,StressIncreases
                AllStressIncreases(RowIndex)=RowStressIncrease

            *enddo

            *vscfun,StressIncrease,SUM,AllStressIncreases

            HorizontalStress=HorEffectivePressure+WaterPressure-StressIncrease
            HorLoad=HorizontalStress*ElementArea

            F,nthNode,FX,HorLoad

            NSEL,U,NODE,,nthNode

        *enddo


        !!
        !! 5.3 CARGAS SOBRE A PAREDE DIREITA
        !!

        *msg,UI,GalleryIndex,LoadStepIndex
GALLERY # %4I %/&
LOAD STEP %4I %/&
APPLYING LOADS ON RIGHT WALL...

        ! Carga horizontal sobre a parede externa direita
        NSEL,S,LOC,X,Eff_GalleryWidth*GalleryModules
        NSEL,R,LOC,Z,0,GalleryLength
        NSEL,R,LOC,Y,0,Eff_GalleryHeight

        *get,NodeCount,NODE,0,COUNT

        *do,NodeIndex,1,NodeCount,1

            *get,nthNode,NODE,0,NUM,MIN

            NX=NX(nthNode)
            NY=NY(nthNode)
            NZ=NZ(nthNode)

            Depth=GalleryDepth+(Eff_GalleryHeight-NY)

            ! Tensão horizontal devido à camada de solo
            *if,WaterY,GT,NY,THEN
                EffectivePressure=Gammat*WaterDepth+(WaterY-NY)*GammaSUB
            *else
                EffectivePressure=Gammat*Depth
            *endif
            HorEffectivePressure=EffectivePressure*RestEPCoefficient-2*SoilCohesion*SQRT(RestEPCoefficient)

            ! Tensão horizontal devido à água
            *if,WaterY,GT,NY,THEN
                WaterPressure=(WaterY-NY)*Gammaw
            *else
                WaterPressure=0
            *endif

            *del,StressIncreases
            *dim,StressIncreases,ARRAY,LoadCount

            *del,AllStressIncreases
            *dim,AllStressIncreases,ARRAY,RowCount

            ! Acréscimo de tensão horizontal devido ao trem-tipo (Boussinesq)
            *do,RowIndex,1,RowCount,1

                *do,LoadIndex,1,LoadCount,1

                    LoadValue=LoadVector(LoadIndex,RowIndex)
                    LoadPosition=PositionVector(LoadIndex,RowIndex)

                    xOffset=xOffsets(RowIndex)
                    zOffset=zOffsets(RowIndex)

                    QX=xOffset+LoadPosition*COS(LineAngle)
                    QY=Eff_GalleryHeight+GalleryDepth
                    QZ=zOffset+LoadPosition*SIN(LineAngle)

                    PerpDistance=ABS(QX-NX)
                    FullDistance=SQRT(((NX-QX)**2)+((NZ-QZ)**2)+((NY-QY)**2))
                    RelativeDepth=QY-NY

                    *if,FullDistance,EQ,0,THEN
                        HorBoussinesqLoad=0
                    *else
                        ! Fórmula do acréscimo de tensão horizontal devido a força concentrada
                        !   Valor muliplicado por 2 (dois) para compensar pela hipótese de semi-espaço infinito
                        !   na situação de repouso.
                        HorBoussinesqLoad=2*(3*LoadValue*(PerpDistance**2)*RelativeDepth/(2*pi*(FullDistance**5)))
                    *endif

                    StressIncreases(LoadIndex)=HorBoussinesqLoad

                *enddo

                *vscfun,RowStressIncrease,SUM,StressIncreases
                AllStressIncreases(RowIndex)=RowStressIncrease

            *enddo

            *vscfun,StressIncrease,SUM,AllStressIncreases

            HorizontalStress=HorEffectivePressure+WaterPressure-StressIncrease
            HorLoad=HorizontalStress*ElementArea

            F,nthNode,FX,-HorLoad

            NSEL,U,NODE,,nthNode

        *enddo


        !!
        !! 5.4 CARGAS SOBRE A LAJE INFERIOR
        !!
        ! Carga vertical sobre a laje de piso
        NSEL,S,LOC,Y,0
        NSEL,R,LOC,X,0,Eff_GalleryWidth*GalleryModules
        NSEL,R,LOC,Z,0,GalleryLength

        ! Empuxo da água
        *if,WaterHeight,GT,0,THEN

            *msg,UI,GalleryIndex,LoadStepIndex
GALLERY # %4I %/&
LOAD STEP %4I %/&
APPLYING BUOYANCY LOADS ON FLOOR SLAB...

            F,ALL,FY,BuoyancyLoad

        *endif

        ALLSEL


        !!
        !! 5.5 CAPTURAR IMAGEM DO CARREGAMENTO
        !!
        /psymb,FBCS,0
        /pbc,F,,1
        /pbc,U,,0
        /pbc,ROT,,0
        /device,VECTOR,ON
        /edge,ALL,1
        /eshape,0
        ESEL,S,MAT,,1
        VIEW4W
        EPLOT
        fName=STRCAT('LOADS4W_',CHRVAL(LoadStepIndex))
        /graphics,FULL
        TAKEPIC,fName,1200,1,1
        /device,VECTOR,OFF
        /edge,ALL,0


        !!
        !! 5.5 ESCREVER LOAD STEP
        !!
        /solu

        ALLSEL

        ANTYPE,0
        NLGEOM,ON

        NSUBST,SubstepCount,SubstepCount*2,SubstepCount/2

        OUTRES,ERASE
        OUTRES,ALL,LAST

        LSWRITE,LoadStepIndex

    *enddo

*enddo

LoadStepCount=LoadStepIndex







